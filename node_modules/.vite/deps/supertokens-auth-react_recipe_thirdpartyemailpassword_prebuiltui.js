import {
  require_session_shared,
  require_session_shared3
} from "./chunk-BJ6QVNC6.js";
import {
  require_index2,
  require_multitenancy_shared
} from "./chunk-LPBR3Z5S.js";
import {
  require_authRecipe_shared,
  require_emailpassword,
  require_emailpassword_shared4,
  require_emailpassword_shared5,
  require_thirdparty,
  require_thirdparty_shared,
  require_thirdpartyemailpassword_shared
} from "./chunk-G7QPR5QF.js";
import {
  require_thirdpartyemailpassword
} from "./chunk-4POGKNFC.js";
import {
  require_cookieHandler,
  require_genericComponentOverrideContext,
  require_multitenancy,
  require_normalisedURLDomain,
  require_normalisedURLPath as require_normalisedURLPath2,
  require_postSuperTokensInitCallbacks,
  require_recipeModule_shared,
  require_session,
  require_session_shared2,
  require_supertokens_web_js,
  require_translationContext,
  require_utils,
  require_windowHandler
} from "./chunk-OH2XL3O4.js";
import {
  require_error,
  require_normalisedURLPath
} from "./chunk-DBOCH5ZF.js";
import {
  require_react_dom
} from "./chunk-ZW7WJ6XU.js";
import {
  require_jsx_runtime
} from "./chunk-DT77FM6J.js";
import {
  require_react
} from "./chunk-4D5CYJYK.js";
import {
  __commonJS
} from "./chunk-CEQRFMJQ.js";

// node_modules/supertokens-auth-react/lib/build/SuperTokensBranding.js
var require_SuperTokensBranding = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/SuperTokensBranding.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var jsxRuntime = require_jsx_runtime();
    var React = require_react();
    var uiEntry = require_index2();
    var session = require_session_shared3();
    var recipe = require_session_shared2();
    var translationContext = require_translationContext();
    var AuthWidgetWrapper = function(props) {
      return jsxRuntime.jsx(
        session.SessionAuth,
        genericComponentOverrideContext.__assign(
          { requireAuth: false, doRedirection: false },
          { children: jsxRuntime.jsx(Redirector, genericComponentOverrideContext.__assign({}, props)) }
        )
      );
    };
    var Redirector = function(props) {
      var sessionContext = React.useContext(uiEntry.SessionContext);
      var userContext = uiEntry.useUserContext();
      var _a = React.useState(false), alwaysShow = _a[0], updateAlwaysShow = _a[1];
      React.useEffect(
        function() {
          if (sessionContext.loading === false) {
            if (sessionContext.doesSessionExist) {
              if (props.onSessionAlreadyExists !== void 0) {
                props.onSessionAlreadyExists();
              } else {
                props.authRecipe.config.onHandleEvent({
                  action: "SESSION_ALREADY_EXISTS"
                });
                void recipe.Session.getInstanceOrThrow().validateGlobalClaimsAndHandleSuccessRedirection(
                  {
                    rid: props.authRecipe.config.recipeId,
                    successRedirectContext: {
                      action: "SUCCESS",
                      isNewRecipeUser: false,
                      user: void 0,
                      redirectToPath: genericComponentOverrideContext.getRedirectToPathFromURL()
                    }
                  },
                  userContext,
                  props.history
                );
              }
            } else {
              updateAlwaysShow(true);
            }
          }
        },
        [sessionContext.loading]
      );
      if ((sessionContext.loading === true || sessionContext.doesSessionExist) && !alwaysShow) {
        return null;
      } else {
        return jsxRuntime.jsx(jsxRuntime.Fragment, { children: props.children });
      }
    };
    function SuperTokensBranding() {
      var t = translationContext.useTranslation();
      return jsxRuntime.jsxs(
        "a",
        genericComponentOverrideContext.__assign(
          {
            "data-supertokens": "superTokensBranding",
            href: "https://supertokens.com?utm_campaign=poweredby",
            target: "_blank"
          },
          {
            children: [
              t("BRANDING_POWERED_BY_START"),
              jsxRuntime.jsx("strong", { children: "SuperTokens" }),
              t("BRANDING_POWERED_BY_END")
            ]
          }
        )
      );
    }
    exports.AuthWidgetWrapper = AuthWidgetWrapper;
    exports.SuperTokensBranding = SuperTokensBranding;
  }
});

// node_modules/supertokens-auth-react/lib/build/emailpassword-shared3.js
var require_emailpassword_shared3 = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/emailpassword-shared3.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var _a = genericComponentOverrideContext.createGenericComponentsOverrideContext();
    var useContext = _a[0];
    var Provider = _a[1];
    exports.Provider = Provider;
    exports.useContext = useContext;
  }
});

// node_modules/supertokens-auth-react/lib/build/translations.js
var require_translations = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/translations.js"(exports) {
    "use strict";
    function hasFontDefined(style) {
      if (style === void 0) {
        return false;
      }
      var lowerStyle = style.toLowerCase();
      return lowerStyle.includes("font-family:") || lowerStyle.includes("font:");
    }
    var defaultTranslationsCommon = {
      en: {
        BRANDING_POWERED_BY_START: "Powered by ",
        BRANDING_POWERED_BY_END: "",
        SOMETHING_WENT_WRONG_ERROR: "Something went wrong. Please try again."
      }
    };
    exports.defaultTranslationsCommon = defaultTranslationsCommon;
    exports.hasFontDefined = hasFontDefined;
  }
});

// node_modules/supertokens-auth-react/lib/build/emailverification-shared2.js
var require_emailverification_shared2 = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/emailverification-shared2.js"(exports) {
    "use strict";
    var jsxRuntime = require_jsx_runtime();
    var React = require_react();
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var translations = require_translations();
    var styles = '/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * "License") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\n[data-supertokens~="container"] {\n    --palette-background: 255, 255, 255;\n    --palette-inputBackground: 250, 250, 250;\n    --palette-inputBorder: 224, 224, 224;\n    --palette-primary: 255, 155, 51;\n    --palette-primaryBorder: 238, 141, 35;\n    --palette-success: 65, 167, 0;\n    --palette-successBackground: 217, 255, 191;\n    --palette-error: 255, 23, 23;\n    --palette-errorBackground: 255, 241, 235;\n    --palette-textTitle: 34, 34, 34;\n    --palette-textLabel: 34, 34, 34;\n    --palette-textInput: 34, 34, 34;\n    --palette-textPrimary: 101, 101, 101;\n    --palette-textLink: 0, 118, 255;\n    --palette-buttonText: 255, 255, 255;\n    --palette-textGray: 128, 128, 128;\n    --palette-superTokensBrandingBackground: 242, 245, 246;\n    --palette-superTokensBrandingText: 173, 189, 196;\n\n    --font-size-0: 12px;\n    --font-size-1: 14px;\n    --font-size-2: 16px;\n    --font-size-3: 19px;\n    --font-size-4: 24px;\n}\n\n/*\n * Default styles.\n */\n\n@-webkit-keyframes slideTop {\n    0% {\n        -webkit-transform: translateY(-5px);\n                transform: translateY(-5px);\n    }\n    100% {\n        -webkit-transform: translateY(0px);\n                transform: translateY(0px);\n    }\n}\n\n@keyframes slideTop {\n    0% {\n        -webkit-transform: translateY(-5px);\n                transform: translateY(-5px);\n    }\n    100% {\n        -webkit-transform: translateY(0px);\n                transform: translateY(0px);\n    }\n}\n\n@-webkit-keyframes swing-in-top-fwd {\n    0% {\n        -webkit-transform: rotateX(-100deg);\n        transform: rotateX(-100deg);\n        -webkit-transform-origin: top;\n        transform-origin: top;\n        opacity: 0;\n    }\n    100% {\n        -webkit-transform: rotateX(0deg);\n        transform: rotateX(0deg);\n        -webkit-transform-origin: top;\n        transform-origin: top;\n        opacity: 1;\n    }\n}\n\n@keyframes swing-in-top-fwd {\n    0% {\n        -webkit-transform: rotateX(-100deg);\n        transform: rotateX(-100deg);\n        -webkit-transform-origin: top;\n        transform-origin: top;\n        opacity: 0;\n    }\n    100% {\n        -webkit-transform: rotateX(0deg);\n        transform: rotateX(0deg);\n        -webkit-transform-origin: top;\n        transform-origin: top;\n        opacity: 1;\n    }\n}\n\n[data-supertokens~="container"] {\n    font-family: "Rubik", sans-serif;\n    margin: 12px auto;\n    margin-top: 26px;\n    margin-bottom: 26px;\n    width: 420px;\n    text-align: center;\n    border-radius: 8px;\n    box-shadow: 1px 1px 10px rgba(0, 0, 0, 0.16);\n    background-color: rgb(var(--palette-background));\n}\n\n@media (max-width: 440px) {\n    [data-supertokens~="container"] {\n        width: 95vw;\n    }\n}\n\n[data-supertokens~="row"] {\n    margin: 0 auto;\n    width: 76%;\n    padding-top: 30px;\n    padding-bottom: 10px;\n}\n\n[data-supertokens~="superTokensBranding"] {\n    display: block;\n    margin: 0 auto;\n    background: rgb(var(--palette-superTokensBrandingBackground));\n    color: rgb(var(--palette-superTokensBrandingText));\n    text-decoration: none;\n    width: -webkit-fit-content;\n    width: -moz-fit-content;\n    width: fit-content;\n    border-radius: 6px 6px 0 0;\n    padding: 4px 9px;\n    font-weight: 300;\n    font-size: var(--font-size-0);\n    letter-spacing: 0.4px;\n}\n\n[data-supertokens~="generalError"] {\n    background: rgb(var(--palette-errorBackground));\n    padding-top: 10px;\n    padding-bottom: 10px;\n    margin-bottom: 15px;\n    padding-left: 18px;\n    padding-right: 18px;\n    letter-spacing: 0.2px;\n    font-size: var(--font-size-1);\n    border-radius: 8px;\n    color: rgb(var(--palette-error));\n    -webkit-animation: swing-in-top-fwd 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) both;\n            animation: swing-in-top-fwd 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) both;\n    word-wrap: break-word;\n}\n\n[data-supertokens~="headerTitle"] {\n    font-size: var(--font-size-4);\n    line-height: 40px;\n    letter-spacing: 0.58px;\n    font-weight: 800;\n    margin-bottom: 2px;\n    color: rgb(var(--palette-textTitle));\n}\n\n[data-supertokens~="headerSubtitle"] {\n    margin-bottom: 21px;\n}\n\n[data-supertokens~="privacyPolicyAndTermsAndConditions"] {\n    max-width: 300px;\n    margin-top: 10px;\n}\n\n[data-supertokens~="privacyPolicyAndTermsAndConditions"] a {\n    line-height: 21px;\n}\n\n/* TODO: split the link style into separate things*/\n\n/* We add this before primary and secondary text, because if they are applied to the same element the other ones take priority */\n\n[data-supertokens~="link"] {\n    padding-left: 3px;\n    padding-right: 3px;\n    color: rgb(var(--palette-textLink));\n    font-size: var(--font-size-1);\n    cursor: pointer;\n    letter-spacing: 0.16px;\n    line-height: 26px;\n}\n\n[data-supertokens~="primaryText"] {\n    font-size: var(--font-size-1);\n    font-weight: 500;\n    letter-spacing: 0.4px;\n    line-height: 21px;\n    color: rgb(var(--palette-textLabel));\n}\n\n[data-supertokens~="secondaryText"] {\n    font-size: var(--font-size-1);\n    font-weight: 300;\n    letter-spacing: 0.4px;\n    color: rgb(var(--palette-textPrimary));\n}\n\n[data-supertokens~="divider"] {\n    margin-top: 1em;\n    margin-bottom: 1em;\n    border-bottom: 0.3px solid #dddddd;\n    align-items: center;\n    padding-bottom: 5px;\n}\n\n[data-supertokens~="headerTinyTitle"] {\n    margin-top: 13px;\n    font-size: var(--font-size-3);\n    letter-spacing: 1.1px;\n    font-weight: 500;\n    line-height: 28px;\n}\n\n[data-supertokens~="secondaryLinkWithArrow"] {\n    margin-top: 10px;\n    margin-bottom: 30px;\n    cursor: pointer;\n}\n\n[data-supertokens~="secondaryLinkWithArrow"]:hover {\n    position: relative;\n    left: 2px;\n    word-spacing: 4px;\n}\n\n[data-supertokens~="generalSuccess"] {\n    color: rgb(var(--palette-success));\n    font-size: var(--font-size-1);\n    background: rgb(var(--palette-successBackground));\n    -webkit-animation: swing-in-top-fwd 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) both;\n            animation: swing-in-top-fwd 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) both;\n    padding: 9px 15px 9px 15px;\n    border-radius: 6px;\n    display: inline-block;\n}\n\n[data-supertokens~="spinner"] {\n    width: 80px;\n    height: auto;\n    padding-top: 20px;\n    padding-bottom: 40px;\n    margin: 0 auto;\n}\n\n[data-supertokens~="error"] {\n    color: rgb(var(--palette-error));\n}\n\n[data-supertokens~="linkButton"] {\n    background-color: transparent;\n    border: 0;\n}\n\n[data-supertokens~="secondaryLinkWithLeftArrow"] {\n    margin-top: 10px;\n    margin-bottom: 40px;\n    cursor: pointer;\n}\n\n[data-supertokens~="secondaryLinkWithLeftArrow"] svg {\n    margin-right: 0.3em;\n}\n\n[data-supertokens~="secondaryLinkWithLeftArrow"]:hover svg {\n    position: relative;\n    left: -4px;\n}\n\n[data-supertokens~="button"] {\n    background-color: rgb(var(--palette-primary));\n    color: rgb(var(--palette-buttonText));\n    width: 100%;\n    height: 34px;\n    font-weight: 700;\n    border-width: 1px;\n    border-style: solid;\n    border-radius: 6px;\n    border-color: rgb(var(--palette-primaryBorder));\n    background-position: center;\n    transition: all 0.4s;\n    background-size: 12000%;\n    cursor: pointer;\n}\n\n[data-supertokens~="button"]:disabled {\n    border: none;\n    cursor: no-drop;\n}\n\n[data-supertokens~="button"]:active {\n    outline: none;\n    transition: all 0s;\n    background-size: 100%;\n    -webkit-filter: brightness(0.85);\n            filter: brightness(0.85);\n}\n\n[data-supertokens~="button"]:focus {\n    outline: none;\n}\n\n[data-supertokens~="inputContainer"] {\n    margin-top: 6px;\n}\n\n[data-supertokens~="inputWrapper"] {\n    box-sizing: border-box;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    background-color: rgb(var(--palette-inputBackground));\n    height: 34px;\n    border-radius: 6px;\n    border: 1px solid rgb(var(--palette-inputBorder));\n}\n\n[data-supertokens~="inputWrapper"][focus-within] {\n    background-color: rgba(var(--palette-inputBackground), 0.25);\n    border: 1px solid rgb(var(--palette-primary));\n    box-shadow: 0 0 0 0.2rem rgba(var(--palette-primary), 0.25);\n    outline: none;\n}\n\n[data-supertokens~="inputWrapper"]:focus-within {\n    background-color: rgba(var(--palette-inputBackground), 0.25);\n    border: 1px solid rgb(var(--palette-primary));\n    box-shadow: 0 0 0 0.2rem rgba(var(--palette-primary), 0.25);\n    outline: none;\n}\n\n[data-supertokens~="inputError"] {\n    border: 1px solid rgb(var(--palette-error));\n    box-shadow: 0 0 0 0.2rem rgba(var(--palette-error), 0.25);\n    outline: none;\n}\n\n[data-supertokens~="inputError"][focus-within] {\n    border: 1px solid rgb(var(--palette-error));\n    box-shadow: 0 0 0 0.2rem rgba(var(--palette-error), 0.25);\n    outline: none;\n}\n\n[data-supertokens~="inputError"]:focus-within {\n    border: 1px solid rgb(var(--palette-error));\n    box-shadow: 0 0 0 0.2rem rgba(var(--palette-error), 0.25);\n    outline: none;\n}\n\n[data-supertokens~="input"] {\n    box-sizing: border-box;\n    padding-left: 15px;\n    -webkit-filter: none;\n            filter: none;\n    color: rgb(var(--palette-textInput));\n    background-color: transparent;\n    border-radius: 6px;\n    font-size: var(--font-size-1);\n    border: none;\n    padding-right: 25px;\n    letter-spacing: 1.2px;\n    flex: 9 1 75%;\n    width: 75%;\n    height: 32px;\n}\n\n[data-supertokens~="input"]:focus {\n    border: none;\n    outline: none;\n}\n\n[data-supertokens~="input"]:-webkit-autofill,\n[data-supertokens~="input"]:-webkit-autofill:hover,\n[data-supertokens~="input"]:-webkit-autofill:focus,\n[data-supertokens~="input"]:-webkit-autofill:active {\n    -webkit-text-fill-color: rgb(var(--palette-textInput));\n    box-shadow: 0 0 0 30px rgb(var(--palette-inputBackground)) inset;\n}\n\n[data-supertokens~="inputAdornment"] {\n    justify-content: center;\n    margin-right: 5px;\n}\n\n[data-supertokens~="showPassword"] {\n    cursor: pointer;\n}\n\n[data-supertokens~="forgotPasswordLink"] {\n    margin-top: 10px;\n}\n\n[data-supertokens~="enterEmailSuccessMessage"] {\n    margin-top: 15px;\n    margin-bottom: 15px;\n    word-break: break-word;\n}\n\n[data-supertokens~="submitNewPasswordSuccessMessage"] {\n    margin-top: 15px;\n    margin-bottom: 15px;\n}\n\n[data-supertokens~="inputErrorMessage"] {\n    padding-top: 5px;\n    padding-bottom: 5px;\n    color: rgb(var(--palette-error));\n    line-height: 24px;\n    font-weight: 400;\n    font-size: var(--font-size-1);\n    text-align: left;\n    -webkit-animation: slideTop 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;\n            animation: slideTop 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;\n    max-width: 330px;\n}\n\n@media (max-width: 440px) {\n    [data-supertokens~="inputErrorMessage"] {\n        max-width: 250px;\n    }\n}\n\n[data-supertokens~="inputErrorSymbol"] {\n    margin-right: 5px;\n    top: 1px;\n    position: relative;\n    left: 2px;\n}\n\n[data-supertokens~="label"] {\n    text-align: left;\n    font-weight: 600;\n    font-size: var(--font-size-1);\n    line-height: 24px;\n    color: rgb(var(--palette-textLabel));\n}\n\n[data-supertokens~="formRow"] {\n    display: flex;\n    flex-direction: column;\n    padding-top: 0px;\n    padding-bottom: 34px;\n}\n\n[data-supertokens~="formRow"][data-supertokens~="hasError"] {\n    padding-bottom: 0;\n}\n\n[data-supertokens~="sendVerifyEmailIcon"] {\n    margin-top: 11px;\n}\n\n[data-supertokens~="headerTinyTitle"] {\n    margin-top: 13px;\n    font-size: var(--font-size-3);\n    letter-spacing: 1.1px;\n    font-weight: 500;\n    line-height: 28px;\n}\n\n[data-supertokens~="sendVerifyEmailText"] {\n    line-height: 21px;\n    font-size: var(--font-size-1);\n    text-align: center;\n    font-weight: 300;\n    letter-spacing: 0.8px;\n}\n\n[data-supertokens~="secondaryLinkWithArrow"] {\n    margin-top: 10px;\n    margin-bottom: 30px;\n    cursor: pointer;\n}\n\n[data-supertokens~="secondaryLinkWithArrow"]:hover {\n    position: relative;\n    left: 2px;\n    word-spacing: 4px;\n}\n\n[data-supertokens~="sendVerifyEmailResend"] {\n    margin-top: 13px;\n    font-weight: 300;\n}\n\n[data-supertokens~="sendVerifyEmailResend"]:hover {\n    text-decoration: underline;\n}\n\n[data-supertokens~="noFormRow"] {\n    padding-bottom: 25px;\n}\n\n[data-supertokens~="emailVerificationButtonWrapper"] {\n    padding-top: 25px;\n    max-width: 96px;\n    margin: 0 auto;\n}\n\n[data-supertokens~="resetPasswordHeaderTitle"] {\n    position: relative;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n[data-supertokens~="backButtonCommon"] {\n    width: 16px;\n    height: 13px;\n}\n\n[data-supertokens~="backButton"] {\n    cursor: pointer;\n    border: none;\n    background-color: transparent;\n    padding: 0px;\n}\n\n[data-supertokens~="backButtonPlaceholder"] {\n    display: block;\n}\n\n[data-supertokens~="resendEmailLink"] {\n    display: inline-block;\n}\n';
    var ThemeBase = function(_a) {
      var children = _a.children, userStyles = _a.userStyles, loadDefaultFont = _a.loadDefaultFont;
      return jsxRuntime.jsxs(React.Fragment, {
        children: [
          children,
          loadDefaultFont && jsxRuntime.jsx("link", {
            href: "//fonts.googleapis.com/css?family=Rubik:wght@300;400;600;500;700",
            rel: "stylesheet",
            type: "text/css"
          }),
          jsxRuntime.jsxs("style", { children: [styles, userStyles.join("\n")] })
        ]
      });
    };
    var defaultTranslationsEmailVerification = {
      en: genericComponentOverrideContext.__assign(
        genericComponentOverrideContext.__assign({}, translations.defaultTranslationsCommon.en),
        {
          EMAIL_VERIFICATION_RESEND_SUCCESS: "Email resent",
          EMAIL_VERIFICATION_SEND_TITLE: "Verify your email address",
          EMAIL_VERIFICATION_SEND_DESC_START: "",
          EMAIL_VERIFICATION_SEND_DESC_STRONG: "Please click on the link",
          EMAIL_VERIFICATION_SEND_DESC_END: " in the email we just sent you to confirm your email address.",
          EMAIL_VERIFICATION_RESEND_BTN: "Resend Email",
          EMAIL_VERIFICATION_LOGOUT: "Logout ",
          EMAIL_VERIFICATION_SUCCESS: "Email verification successful!",
          EMAIL_VERIFICATION_CONTINUE_BTN: "CONTINUE",
          EMAIL_VERIFICATION_CONTINUE_LINK: "Continue",
          EMAIL_VERIFICATION_EXPIRED: "The email verification link has expired",
          EMAIL_VERIFICATION_ERROR_TITLE: "Something went wrong",
          EMAIL_VERIFICATION_ERROR_DESC: "We encountered an unexpected error. Please contact support for assistance",
          EMAIL_VERIFICATION_LINK_CLICKED_HEADER: "Verify your email address",
          EMAIL_VERIFICATION_LINK_CLICKED_DESC: "Please click on the button below to verify your email address",
          EMAIL_VERIFICATION_LINK_CLICKED_CONTINUE_BUTTON: "CONTINUE"
        }
      )
    };
    exports.ThemeBase = ThemeBase;
    exports.defaultTranslationsEmailVerification = defaultTranslationsEmailVerification;
  }
});

// node_modules/supertokens-auth-react/lib/build/arrowLeftIcon.js
var require_arrowLeftIcon = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/arrowLeftIcon.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var jsxRuntime = require_jsx_runtime();
    function ArrowLeftIcon(_a) {
      var color = _a.color;
      return jsxRuntime.jsx(
        "svg",
        genericComponentOverrideContext.__assign(
          {
            xmlns: "http://www.w3.org/2000/svg",
            width: "11.272",
            height: "9.49",
            viewBox: "0 0 11.272 9.49",
            "data-supertokens": "arrowLeftIcon"
          },
          {
            children: jsxRuntime.jsx("path", {
              fill: color,
              stroke: "#fff",
              strokeWidth: "0.75px",
              d: "M9.931 5.2h.016-7.041L5.12 7.41a.581.581 0 0 1 0 .817l-.344.345a.576.576 0 0 1-.813 0L.168 4.778a.58.58 0 0 1 0-.816L3.962.168a.577.577 0 0 1 .813 0l.345.344a.57.57 0 0 1 .168.407.553.553 0 0 1-.168.4l-2.239 2.23h7.058a.6.6 0 0 1 .584.59v.487a.585.585 0 0 1-.592.574z",
              transform: "translate(.375 .375)"
            })
          }
        )
      );
    }
    exports.ArrowLeftIcon = ArrowLeftIcon;
  }
});

// node_modules/supertokens-web-js/utils/error.js
var require_error2 = __commonJS({
  "node_modules/supertokens-web-js/utils/error.js"(exports) {
    "use strict";
    function __export(m) {
      for (var p in m)
        if (!exports.hasOwnProperty(p))
          exports[p] = m[p];
    }
    exports.__esModule = true;
    var d = require_error();
    if (d.default !== void 0) {
      __export(d);
    } else {
      __export({
        default: d,
        ...d
      });
    }
  }
});

// node_modules/supertokens-auth-react/lib/build/emailpassword-shared2.js
var require_emailpassword_shared2 = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/emailpassword-shared2.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var jsxRuntime = require_jsx_runtime();
    require_index2();
    var translationContext = require_translationContext();
    function Button(_a) {
      var type = _a.type, label = _a.label, disabled = _a.disabled, isLoading = _a.isLoading, onClick = _a.onClick;
      var t = translationContext.useTranslation();
      if (disabled === void 0) {
        disabled = false;
      }
      return jsxRuntime.jsxs(
        "button",
        genericComponentOverrideContext.__assign(
          { type, disabled, onClick, "data-supertokens": "button" },
          { children: [t(label), isLoading && "..."] }
        )
      );
    }
    exports.Button = Button;
  }
});

// node_modules/supertokens-auth-react/lib/build/emailpassword-shared7.js
var require_emailpassword_shared7 = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/emailpassword-shared7.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var jsxRuntime = require_jsx_runtime();
    var React = require_react();
    var STGeneralError = require_error2();
    var validators = require_emailpassword_shared5();
    var button = require_emailpassword_shared2();
    require_index2();
    var translationContext = require_translationContext();
    function _interopDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var STGeneralError__default = _interopDefault(STGeneralError);
    function FormRow(_a) {
      var children = _a.children, hasError = _a.hasError;
      return jsxRuntime.jsx(
        "div",
        genericComponentOverrideContext.__assign(
          { "data-supertokens": ["formRow", hasError ? "hasError" : ""].join(" ") },
          { children }
        )
      );
    }
    function CheckedIcon() {
      return jsxRuntime.jsx(
        "svg",
        genericComponentOverrideContext.__assign(
          {
            xmlns: "http://www.w3.org/2000/svg",
            width: "14.862",
            height: "12.033",
            viewBox: "0 0 14.862 12.033",
            "data-supertokens": "checkedIcon"
          },
          {
            children: jsxRuntime.jsx("path", {
              fill: "rgb(var(--palette-primary))",
              d: "M12.629 49L5.06 56.572l-2.829-2.829L0 55.977l5.057 5.057.654-.651 9.152-9.152z",
              transform: "translate(0 -49)"
            })
          }
        )
      );
    }
    function ErrorIcon() {
      return jsxRuntime.jsx(
        "svg",
        genericComponentOverrideContext.__assign(
          {
            xmlns: "http://www.w3.org/2000/svg",
            width: "17",
            height: "15",
            viewBox: "0 0 17 15",
            "data-supertokens": "errorIcon"
          },
          {
            children: jsxRuntime.jsxs("g", {
              children: [
                jsxRuntime.jsx(
                  "g",
                  genericComponentOverrideContext.__assign(
                    { className: "Asdf", fill: "rgb(var(--palette-error))" },
                    {
                      children: jsxRuntime.jsx("path", {
                        d: "M13.568 14.75H3.432c-.63 0-1.195-.325-1.512-.869-.317-.544-.32-1.196-.01-1.744l5.067-8.943c.315-.556.884-.887 1.523-.887.639 0 1.208.331 1.523.887l5.067 8.943c.31.548.307 1.2-.01 1.744s-.882.869-1.512.869z",
                        transform: "translate(-824.894 -352.829) translate(824.894 352.829)"
                      })
                    }
                  )
                ),
                jsxRuntime.jsx(
                  "text",
                  genericComponentOverrideContext.__assign(
                    {
                      fill: "#fff",
                      fontSize: "10px",
                      fontWeight: "700",
                      transform: "translate(-824.894 -352.829) translate(832.014 365.198)"
                    },
                    {
                      children: jsxRuntime.jsx(
                        "tspan",
                        genericComponentOverrideContext.__assign({ x: "0", y: "0" }, { children: "!" })
                      )
                    }
                  )
                )
              ]
            })
          }
        )
      );
    }
    function ShowPasswordIcon(_a) {
      var showPassword = _a.showPassword;
      if (showPassword === true) {
        return jsxRuntime.jsx("div", {
          children: jsxRuntime.jsx(
            "svg",
            genericComponentOverrideContext.__assign(
              {
                xmlns: "http://www.w3.org/2000/svg",
                width: "18.391",
                height: "16.276",
                viewBox: "0 0 18.391 16.276",
                "data-supertokens": "showPasswordIcon show"
              },
              {
                children: jsxRuntime.jsxs("g", {
                  children: [
                    jsxRuntime.jsx("g", {
                      children: jsxRuntime.jsx("g", {
                        children: jsxRuntime.jsx("g", {
                          children: jsxRuntime.jsx("path", {
                            fill: "rgb(var(--palette-textPrimary))",
                            d: "M29.289 100.33c-2.4-3.63-5.619-5.63-9.069-5.63s-6.67 2-9.069 5.63a.767.767 0 0 0 0 .845c2.4 3.63 5.619 5.63 9.069 5.63s6.67-2 9.069-5.63a.767.767 0 0 0 0-.845zm-9.069 4.944c-2.785 0-5.435-1.6-7.5-4.519 2.065-2.92 4.715-4.519 7.5-4.519s5.435 1.6 7.5 4.519c-2.064 2.92-4.711 4.519-7.5 4.519z",
                            transform: "translate(-822 -420.048) translate(822 422.035) translate(-11.025 -94.7)"
                          })
                        })
                      })
                    }),
                    jsxRuntime.jsxs(
                      "g",
                      genericComponentOverrideContext.__assign(
                        {
                          fill: "rgb(var(--palette-textPrimary))",
                          stroke: "rgb(var(--palette-inputBackground))",
                          transform: "translate(-822 -420.048) translate(827.164 424.055)"
                        },
                        {
                          children: [
                            jsxRuntime.jsx("circle", {
                              cx: "4.036",
                              cy: "4.036",
                              r: "4.036",
                              stroke: "none"
                            }),
                            jsxRuntime.jsx("circle", {
                              cx: "4.036",
                              cy: "4.036",
                              r: "3.536",
                              fill: "none"
                            })
                          ]
                        }
                      )
                    ),
                    jsxRuntime.jsx("path", {
                      fill: "none",
                      stroke: "#707070",
                      strokeLinecap: "round",
                      strokeWidth: "2.25px",
                      d: "M11.981 0L0 11.981",
                      transform: "translate(-822 -420.048) translate(825.084 421.639)"
                    }),
                    jsxRuntime.jsx("path", {
                      fill: "none",
                      stroke: "rgb(var(--palette-inputBackground))",
                      strokeLinecap: "round",
                      d: "M13.978 0L0 13.978",
                      transform: "translate(-822 -420.048) translate(825.084 421.639)"
                    })
                  ]
                })
              }
            )
          )
        });
      }
      return jsxRuntime.jsx("div", {
        children: jsxRuntime.jsx(
          "svg",
          genericComponentOverrideContext.__assign(
            {
              xmlns: "http://www.w3.org/2000/svg",
              width: "18.281",
              height: "12.033",
              viewBox: "0 0 18.281 12.033",
              "data-supertokens": "showPasswordIcon hide"
            },
            {
              children: jsxRuntime.jsxs("g", {
                children: [
                  jsxRuntime.jsx("g", {
                    children: jsxRuntime.jsx("g", {
                      children: jsxRuntime.jsx("g", {
                        children: jsxRuntime.jsx("path", {
                          fill: "rgb(var(--palette-textPrimary))",
                          d: "M29.18 100.3c-2.384-3.608-5.586-5.6-9.015-5.6s-6.63 1.989-9.015 5.6a.763.763 0 0 0 0 .84c2.384 3.608 5.586 5.6 9.015 5.6s6.63-1.989 9.015-5.6a.763.763 0 0 0 0-.84zm-9.015 4.914c-2.769 0-5.4-1.589-7.459-4.492 2.052-2.9 4.686-4.492 7.459-4.492s5.4 1.589 7.459 4.492c-2.056 2.899-4.686 4.489-7.458 4.489z",
                          transform: "translate(-822 -422.088) translate(822 422.088) translate(-11.025 -94.7)"
                        })
                      })
                    })
                  }),
                  jsxRuntime.jsxs(
                    "g",
                    genericComponentOverrideContext.__assign(
                      {
                        fill: "rgb(var(--palette-textPrimary))",
                        stroke: "rgb(var(--palette-inputBackground))",
                        transform: "translate(-822 -422.088) translate(827.133 424.096)"
                      },
                      {
                        children: [
                          jsxRuntime.jsx("circle", {
                            cx: "4.012",
                            cy: "4.012",
                            r: "4.012",
                            stroke: "none"
                          }),
                          jsxRuntime.jsx("circle", {
                            cx: "4.012",
                            cy: "4.012",
                            r: "3.512",
                            fill: "none"
                          })
                        ]
                      }
                    )
                  )
                ]
              })
            }
          )
        )
      });
    }
    var Input = function(_a) {
      var type = _a.type, name = _a.name, hasError = _a.hasError, autoComplete = _a.autoComplete, onInputFocus = _a.onInputFocus, onInputBlur = _a.onInputBlur, onChange = _a.onChange, value = _a.value, placeholder = _a.placeholder, validated = _a.validated, autofocus = _a.autofocus;
      var t = translationContext.useTranslation();
      var _b = React.useState(false), showPassword = _b[0], setShowPassword = _b[1];
      function handleFocus() {
        if (onInputFocus !== void 0) {
          onInputFocus(value);
        }
      }
      function handleBlur() {
        if (onInputBlur !== void 0) {
          onInputBlur(value);
        }
      }
      function handleChange(event) {
        if (onChange) {
          onChange(event.target.value);
        }
      }
      if (autoComplete === void 0) {
        autoComplete = "off";
      }
      var inputType = type;
      if (type === "password" && showPassword === true) {
        inputType = "text";
      }
      return jsxRuntime.jsx(
        "div",
        genericComponentOverrideContext.__assign(
          { "data-supertokens": "inputContainer" },
          {
            children: jsxRuntime.jsxs(
              "div",
              genericComponentOverrideContext.__assign(
                { "data-supertokens": ["inputWrapper", hasError ? "inputError" : ""].join(" ") },
                {
                  children: [
                    jsxRuntime.jsx("input", {
                      autoFocus: autofocus,
                      autoComplete,
                      "data-supertokens": "input",
                      className: "supertokens-input",
                      onFocus: handleFocus,
                      onBlur: handleBlur,
                      type: inputType,
                      name,
                      placeholder: t(placeholder),
                      onChange: handleChange,
                      value
                    }),
                    hasError === true && jsxRuntime.jsx(
                      "div",
                      genericComponentOverrideContext.__assign(
                        { "data-supertokens": "inputAdornment inputAdornmentError" },
                        { children: jsxRuntime.jsx(ErrorIcon, {}) }
                      )
                    ),
                    validated === true && hasError === false && jsxRuntime.jsx(
                      "div",
                      genericComponentOverrideContext.__assign(
                        { "data-supertokens": "inputAdornment inputAdornmentSuccess" },
                        { children: jsxRuntime.jsx(CheckedIcon, {}) }
                      )
                    ),
                    type === "password" && value.length > 0 && jsxRuntime.jsx(
                      "div",
                      genericComponentOverrideContext.__assign(
                        {
                          onClick: function() {
                            return setShowPassword(showPassword === false);
                          },
                          "data-supertokens": "inputAdornment showPassword"
                        },
                        {
                          children: jsxRuntime.jsx(ShowPasswordIcon, {
                            showPassword
                          })
                        }
                      )
                    )
                  ]
                }
              )
            )
          }
        )
      );
    };
    function InputError(_a) {
      var error = _a.error;
      var t = translationContext.useTranslation();
      return jsxRuntime.jsx(
        "div",
        genericComponentOverrideContext.__assign({ "data-supertokens": "inputErrorMessage" }, { children: t(error) })
      );
    }
    function Label(_a) {
      var value = _a.value, showIsRequired = _a.showIsRequired;
      var t = translationContext.useTranslation();
      return jsxRuntime.jsxs(
        "div",
        genericComponentOverrideContext.__assign(
          { "data-supertokens": "label" },
          { children: [t(value), showIsRequired && value && value.trim() !== "" && " *"] }
        )
      );
    }
    var fetchDefaultValue = function(field) {
      if (field.getDefaultValue !== void 0) {
        var defaultValue = field.getDefaultValue();
        if (typeof defaultValue !== "string") {
          throw new Error("getDefaultValue for ".concat(field.id, " must return a string"));
        } else {
          return defaultValue;
        }
      }
      return "";
    };
    function InputComponentWrapper(props) {
      var field = props.field, type = props.type, fstate = props.fstate, onInputFocus = props.onInputFocus, onInputBlur = props.onInputBlur, onInputChange = props.onInputChange;
      var useCallbackOnInputFocus = React.useCallback(
        function(value) {
          onInputFocus({
            id: field.id,
            value
          });
        },
        [onInputFocus, field]
      );
      var useCallbackOnInputBlur = React.useCallback(
        function(value) {
          onInputBlur({
            id: field.id,
            value
          });
        },
        [onInputBlur, field]
      );
      var useCallbackOnInputChange = React.useCallback(
        function(value) {
          onInputChange({
            id: field.id,
            value
          });
        },
        [onInputChange, field]
      );
      return field.inputComponent !== void 0 ? jsxRuntime.jsx(field.inputComponent, {
        type,
        name: field.id,
        validated: fstate.validated === true,
        placeholder: field.placeholder,
        value: fstate.value,
        autoComplete: field.autoComplete,
        autofocus: field.autofocus,
        onInputFocus: useCallbackOnInputFocus,
        onInputBlur: useCallbackOnInputBlur,
        onChange: useCallbackOnInputChange,
        hasError: fstate.error !== void 0
      }) : jsxRuntime.jsx(Input, {
        type,
        name: field.id,
        validated: fstate.validated === true,
        placeholder: field.placeholder,
        value: fstate.value,
        autoComplete: field.autoComplete,
        onInputFocus: useCallbackOnInputFocus,
        onInputBlur: useCallbackOnInputBlur,
        onChange: useCallbackOnInputChange,
        autofocus: field.autofocus,
        hasError: fstate.error !== void 0
      });
    }
    var FormBase = function(props) {
      var footer = props.footer, buttonLabel = props.buttonLabel, showLabels = props.showLabels, validateOnBlur = props.validateOnBlur, formFields = props.formFields;
      var unmounting = React.useRef(new AbortController());
      React.useEffect(
        function() {
          unmounting.current = new AbortController();
          return function() {
            unmounting.current.abort();
          };
        },
        [unmounting]
      );
      var _a = React.useState(
        props.formFields.map(function(f) {
          return { id: f.id, value: fetchDefaultValue(f) };
        })
      ), fieldStates = _a[0], setFieldStates = _a[1];
      var _b = React.useState(false), isLoading = _b[0], setIsLoading = _b[1];
      var updateFieldState = React.useCallback(
        function(id, update) {
          setFieldStates(function(os) {
            var field = os.find(function(f) {
              return f.id === id;
            });
            if (field === void 0) {
              return genericComponentOverrideContext.__spreadArray(
                genericComponentOverrideContext.__spreadArray([], os, true),
                [update({ id, value: "" })],
                false
              );
            }
            return os.filter(function(f) {
              return f !== field;
            }).concat(update(field));
          });
        },
        [setFieldStates]
      );
      var onInputFocus = React.useCallback(
        function(field) {
          updateFieldState(field.id, function(os) {
            return genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, os), {
              validated: false
            });
          });
        },
        [updateFieldState]
      );
      var onInputBlur = React.useCallback(
        function(field) {
          return genericComponentOverrideContext.__awaiter(void 0, void 0, void 0, function() {
            var fieldConfig, error, _a2;
            return genericComponentOverrideContext.__generator(this, function(_b2) {
              switch (_b2.label) {
                case 0:
                  if (!validateOnBlur) {
                    return [
                      2
                      /*return*/
                    ];
                  }
                  fieldConfig = props.formFields.find(function(f) {
                    return f.id === field.id;
                  });
                  if (!(fieldConfig && field.value !== ""))
                    return [3, 2];
                  return [4, fieldConfig.validate(field.value)];
                case 1:
                  _a2 = _b2.sent();
                  return [3, 3];
                case 2:
                  _a2 = void 0;
                  _b2.label = 3;
                case 3:
                  error = _a2;
                  updateFieldState(field.id, function(os) {
                    return genericComponentOverrideContext.__assign(
                      genericComponentOverrideContext.__assign({}, os),
                      { error, validated: error === void 0 && field.value.length !== 0 }
                    );
                  });
                  return [
                    2
                    /*return*/
                  ];
              }
            });
          });
        },
        [validateOnBlur, updateFieldState, props.formFields]
      );
      var onInputChange = React.useCallback(
        function(field) {
          if (typeof field.value !== "string") {
            throw new Error("".concat(field.id, " value must be a string"));
          }
          updateFieldState(field.id, function(os) {
            return genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, os), {
              value: field.value,
              error: void 0
            });
          });
          props.clearError();
        },
        [updateFieldState]
      );
      var onFormSubmit = React.useCallback(
        function(e) {
          return genericComponentOverrideContext.__awaiter(void 0, void 0, void 0, function() {
            var apiFields, fieldUpdates, result, generalError, e_1, _loop_1, _i, formFields_1, field, errorFields_1, getErrorMessage_1;
            return genericComponentOverrideContext.__generator(this, function(_a2) {
              switch (_a2.label) {
                case 0:
                  e.preventDefault();
                  setIsLoading(true);
                  setFieldStates(function(os) {
                    return os.map(function(fs) {
                      return genericComponentOverrideContext.__assign(
                        genericComponentOverrideContext.__assign({}, fs),
                        { error: void 0 }
                      );
                    });
                  });
                  apiFields = formFields.map(function(field2) {
                    var fieldState = fieldStates.find(function(fs) {
                      return fs.id === field2.id;
                    });
                    return {
                      id: field2.id,
                      value: fieldState === void 0 ? "" : fieldState.value
                    };
                  });
                  fieldUpdates = [];
                  _a2.label = 1;
                case 1:
                  _a2.trys.push([1, 6, 7, 8]);
                  result = void 0;
                  generalError = void 0;
                  _a2.label = 2;
                case 2:
                  _a2.trys.push([2, 4, , 5]);
                  return [
                    4,
                    props.callAPI(apiFields, function(id, value) {
                      return fieldUpdates.push({ id, value });
                    })
                  ];
                case 3:
                  result = _a2.sent();
                  return [3, 5];
                case 4:
                  e_1 = _a2.sent();
                  if (STGeneralError__default.default.isThisError(e_1)) {
                    generalError = e_1;
                  } else {
                    throw e_1;
                  }
                  return [3, 5];
                case 5:
                  if (unmounting.current.signal.aborted) {
                    return [
                      2
                      /*return*/
                    ];
                  }
                  _loop_1 = function(field2) {
                    var update = fieldUpdates.find(function(f) {
                      return f.id === field2.id;
                    });
                    if (update || field2.clearOnSubmit === true) {
                      updateFieldState(field2.id, function(os) {
                        return genericComponentOverrideContext.__assign(
                          genericComponentOverrideContext.__assign({}, os),
                          { value: update ? update.value : "" }
                        );
                      });
                    }
                  };
                  for (_i = 0, formFields_1 = formFields; _i < formFields_1.length; _i++) {
                    field = formFields_1[_i];
                    _loop_1(field);
                  }
                  if (generalError !== void 0) {
                    props.onError(generalError.message);
                  } else {
                    if (result.status === "OK") {
                      setIsLoading(false);
                      props.clearError();
                      if (props.onSuccess !== void 0) {
                        props.onSuccess(result);
                      }
                    }
                    if (unmounting.current.signal.aborted) {
                      return [
                        2
                        /*return*/
                      ];
                    }
                    if (result.status === "FIELD_ERROR") {
                      errorFields_1 = result.formFields;
                      getErrorMessage_1 = function(fs) {
                        var _a3;
                        var errorMessage = (_a3 = errorFields_1.find(function(ef) {
                          return ef.id === fs.id;
                        })) === null || _a3 === void 0 ? void 0 : _a3.error;
                        if (errorMessage === "Field is not optional") {
                          var fieldConfigData = props.formFields.find(function(f) {
                            return f.id === fs.id;
                          });
                          if ((fieldConfigData === null || fieldConfigData === void 0 ? void 0 : fieldConfigData.nonOptionalErrorMsg) !== void 0) {
                            return fieldConfigData === null || fieldConfigData === void 0 ? void 0 : fieldConfigData.nonOptionalErrorMsg;
                          }
                        }
                        return errorMessage;
                      };
                      setFieldStates(function(os) {
                        return os.map(function(fs) {
                          return genericComponentOverrideContext.__assign(
                            genericComponentOverrideContext.__assign({}, fs),
                            { error: getErrorMessage_1(fs) }
                          );
                        });
                      });
                    }
                  }
                  return [3, 8];
                case 6:
                  _a2.sent();
                  props.onError("SOMETHING_WENT_WRONG_ERROR");
                  return [3, 8];
                case 7:
                  setIsLoading(false);
                  return [
                    7
                    /*endfinally*/
                  ];
                case 8:
                  return [
                    2
                    /*return*/
                  ];
              }
            });
          });
        },
        [setIsLoading, setFieldStates, props, formFields, fieldStates]
      );
      return jsxRuntime.jsxs(
        "form",
        genericComponentOverrideContext.__assign(
          { autoComplete: "on", noValidate: true, onSubmit: onFormSubmit },
          {
            children: [
              formFields.map(function(field) {
                var type = "text";
                if (validators.MANDATORY_FORM_FIELDS_ID_ARRAY.includes(field.id)) {
                  type = field.id;
                }
                if (field.id === "confirm-password") {
                  type = "password";
                }
                var fstate = fieldStates.find(function(s) {
                  return s.id === field.id;
                });
                if (fstate === void 0) {
                  throw new Error("Should never come here");
                }
                return jsxRuntime.jsx(
                  FormRow,
                  genericComponentOverrideContext.__assign(
                    { hasError: fstate.error !== void 0 },
                    {
                      children: jsxRuntime.jsxs(React.Fragment, {
                        children: [
                          showLabels && (field.labelComponent !== void 0 ? field.labelComponent : jsxRuntime.jsx(Label, {
                            value: field.label,
                            showIsRequired: field.showIsRequired
                          })),
                          jsxRuntime.jsx(InputComponentWrapper, {
                            type,
                            field,
                            fstate,
                            onInputFocus,
                            onInputBlur,
                            onInputChange
                          }),
                          fstate.error && jsxRuntime.jsx(InputError, { error: fstate.error })
                        ]
                      })
                    }
                  ),
                  field.id
                );
              }),
              jsxRuntime.jsx(
                FormRow,
                {
                  children: jsxRuntime.jsxs(React.Fragment, {
                    children: [
                      jsxRuntime.jsx(button.Button, {
                        disabled: isLoading,
                        isLoading,
                        type: "submit",
                        label: buttonLabel
                      }),
                      footer
                    ]
                  })
                },
                "form-button"
              )
            ]
          }
        )
      );
    };
    exports.ErrorIcon = ErrorIcon;
    exports.FormBase = FormBase;
    exports.FormRow = FormRow;
    exports.Label = Label;
  }
});

// node_modules/supertokens-auth-react/lib/build/emailpassword-shared.js
var require_emailpassword_shared = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/emailpassword-shared.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var jsxRuntime = require_jsx_runtime();
    var translationContext = require_translationContext();
    function GeneralError(_a) {
      var error = _a.error;
      var t = translationContext.useTranslation();
      return jsxRuntime.jsx(
        "div",
        genericComponentOverrideContext.__assign({ "data-supertokens": "generalError" }, { children: t(error) })
      );
    }
    exports.GeneralError = GeneralError;
  }
});

// node_modules/supertokens-auth-react/lib/build/emailpassword-shared6.js
var require_emailpassword_shared6 = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/emailpassword-shared6.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var jsxRuntime = require_jsx_runtime();
    var NormalisedURLPath = require_normalisedURLPath2();
    var uiEntry = require_index2();
    var SuperTokensBranding = require_SuperTokensBranding();
    var componentOverrideContext = require_emailpassword_shared3();
    var React = require_react();
    var translations = require_translations();
    var translations$1 = require_emailverification_shared2();
    var translationContext = require_translationContext();
    var arrowLeftIcon = require_arrowLeftIcon();
    var formBase = require_emailpassword_shared7();
    var generalError = require_emailpassword_shared();
    var STGeneralError = require_error2();
    var button = require_emailpassword_shared2();
    var recipe = require_session_shared2();
    var STGeneralError$1 = require_error();
    var validators = require_emailpassword_shared5();
    var recipe$1 = require_emailpassword_shared4();
    function _interopDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    function _interopNamespace(e) {
      if (e && e.__esModule)
        return e;
      var n = /* @__PURE__ */ Object.create(null);
      if (e) {
        Object.keys(e).forEach(function(k) {
          if (k !== "default") {
            var d = Object.getOwnPropertyDescriptor(e, k);
            Object.defineProperty(
              n,
              k,
              d.get ? d : {
                enumerable: true,
                get: function() {
                  return e[k];
                }
              }
            );
          }
        });
      }
      n.default = e;
      return Object.freeze(n);
    }
    var NormalisedURLPath__default = _interopDefault(NormalisedURLPath);
    var React__namespace = _interopNamespace(React);
    var STGeneralError__default = _interopDefault(STGeneralError);
    var STGeneralError__default$1 = _interopDefault(STGeneralError$1);
    function HeavyArrowLeftIcon(_a) {
      var color = _a.color;
      return jsxRuntime.jsx(
        "svg",
        genericComponentOverrideContext.__assign(
          {
            xmlns: "http://www.w3.org/2000/svg",
            width: "16",
            height: "13",
            viewBox: "0 0 16 13",
            "data-supertokens": "heavyArrowLeftIcon"
          },
          {
            children: jsxRuntime.jsx("path", {
              fill: color,
              d: "M13 6.8h.022H3.8l2.9 2.9a.761.761 0 0 1 0 1.07l-.451.451a.754.754 0 0 1-1.064 0L.22 6.254a.759.759 0 0 1 0-1.068L5.186.22a.755.755 0 0 1 1.064 0l.45.451a.746.746 0 0 1 .22.532.724.724 0 0 1-.22.522l-2.93 2.92h9.24a.781.781 0 0 1 .764.773v.638A.766.766 0 0 1 13 6.8z",
              transform: "translate(1.182 .708)"
            })
          }
        )
      );
    }
    function BackButton(_a) {
      var onClick = _a.onClick;
      return jsxRuntime.jsx(
        "button",
        genericComponentOverrideContext.__assign(
          { onClick, "data-supertokens": "backButton backButtonCommon" },
          { children: jsxRuntime.jsx(HeavyArrowLeftIcon, { color: "rgb(var(--palette-textTitle))" }) }
        )
      );
    }
    function BackToSignInButton(_a) {
      var onClick = _a.onClick;
      var t = translationContext.useTranslation();
      return jsxRuntime.jsxs(
        "div",
        genericComponentOverrideContext.__assign(
          { "data-supertokens": "secondaryText secondaryLinkWithLeftArrow", onClick },
          {
            children: [
              jsxRuntime.jsx(arrowLeftIcon.ArrowLeftIcon, { color: "rgb(var(--palette-secondaryText))" }),
              t("EMAIL_PASSWORD_RESET_SIGN_IN_LINK")
            ]
          }
        )
      );
    }
    var EmailPasswordResetPasswordEmail = function(props) {
      var t = translationContext.useTranslation();
      var userContext = uiEntry.useUserContext();
      var _a = React.useState("READY"), status = _a[0], setStatus = _a[1];
      var _b = React.useState(""), emailFieldValue = _b[0], setEmailFieldValue = _b[1];
      var onSuccess = function() {
        setStatus("SENT");
      };
      var resend = function() {
        setStatus("READY");
      };
      var formFields = props.formFields;
      var emailSuccessText = t("EMAIL_PASSWORD_RESET_SEND_BEFORE_EMAIL") + (emailFieldValue !== void 0 && emailFieldValue.length > 0 ? emailFieldValue : t("EMAIL_PASSWORD_RESET_SEND_FALLBACK_EMAIL")) + t("EMAIL_PASSWORD_RESET_SEND_AFTER_EMAIL");
      if (status === "SENT") {
        return jsxRuntime.jsx(
          "div",
          genericComponentOverrideContext.__assign(
            { "data-supertokens": "container" },
            {
              children: jsxRuntime.jsxs(
                "div",
                genericComponentOverrideContext.__assign(
                  { "data-supertokens": "row" },
                  {
                    children: [
                      jsxRuntime.jsxs(
                        "div",
                        genericComponentOverrideContext.__assign(
                          { "data-supertokens": "primaryText enterEmailSuccessMessage" },
                          {
                            children: [
                              emailSuccessText,
                              jsxRuntime.jsx(
                                "span",
                                genericComponentOverrideContext.__assign(
                                  {
                                    "data-supertokens": "link resendEmailLink",
                                    onClick: resend
                                  },
                                  { children: t("EMAIL_PASSWORD_RESET_RESEND_LINK") }
                                )
                              )
                            ]
                          }
                        )
                      ),
                      jsxRuntime.jsx(BackToSignInButton, { onClick: props.onBackButtonClicked })
                    ]
                  }
                )
              )
            }
          )
        );
      }
      return jsxRuntime.jsx(
        "div",
        genericComponentOverrideContext.__assign(
          { "data-supertokens": "container" },
          {
            children: jsxRuntime.jsxs(
              "div",
              genericComponentOverrideContext.__assign(
                { "data-supertokens": "row" },
                {
                  children: [
                    jsxRuntime.jsxs(
                      "div",
                      genericComponentOverrideContext.__assign(
                        { "data-supertokens": "headerTitle resetPasswordHeaderTitle" },
                        {
                          children: [
                            jsxRuntime.jsx(BackButton, { onClick: props.onBackButtonClicked }),
                            t("EMAIL_PASSWORD_RESET_HEADER_TITLE"),
                            jsxRuntime.jsx("span", {
                              "data-supertokens": "backButtonPlaceholder backButtonCommon"
                            })
                          ]
                        }
                      )
                    ),
                    jsxRuntime.jsx(
                      "div",
                      genericComponentOverrideContext.__assign(
                        { "data-supertokens": "headerSubtitle" },
                        {
                          children: jsxRuntime.jsx(
                            "div",
                            genericComponentOverrideContext.__assign(
                              { "data-supertokens": "secondaryText" },
                              { children: t("EMAIL_PASSWORD_RESET_HEADER_SUBTITLE") }
                            )
                          )
                        }
                      )
                    ),
                    props.error !== void 0 && jsxRuntime.jsx(generalError.GeneralError, { error: props.error }),
                    jsxRuntime.jsx(formBase.FormBase, {
                      clearError: props.clearError,
                      onError: props.onError,
                      formFields,
                      buttonLabel: "EMAIL_PASSWORD_RESET_SEND_BTN",
                      onSuccess,
                      callAPI: function(formFields2) {
                        return genericComponentOverrideContext.__awaiter(
                          void 0,
                          void 0,
                          void 0,
                          function() {
                            var validationErrors, emailField, resp;
                            return genericComponentOverrideContext.__generator(this, function(_a2) {
                              switch (_a2.label) {
                                case 0:
                                  return [
                                    4,
                                    genericComponentOverrideContext.validateForm(
                                      formFields2,
                                      props.config.resetPasswordUsingTokenFeature.enterEmailForm.formFields
                                    )
                                  ];
                                case 1:
                                  validationErrors = _a2.sent();
                                  if (validationErrors.length > 0) {
                                    return [
                                      2,
                                      {
                                        status: "FIELD_ERROR",
                                        formFields: validationErrors
                                      }
                                    ];
                                  }
                                  emailField = formFields2.find(function(field) {
                                    return field.id === "email";
                                  });
                                  if (emailField !== void 0) {
                                    setEmailFieldValue(emailField.value);
                                  }
                                  return [
                                    4,
                                    props.recipeImplementation.sendPasswordResetEmail({
                                      formFields: formFields2,
                                      userContext
                                    })
                                  ];
                                case 2:
                                  resp = _a2.sent();
                                  if (resp.status === "PASSWORD_RESET_NOT_ALLOWED") {
                                    return [
                                      2,
                                      {
                                        status: "FIELD_ERROR",
                                        formFields: [
                                          { id: "email", error: resp.reason }
                                        ]
                                      }
                                    ];
                                  }
                                  return [2, resp];
                              }
                            });
                          }
                        );
                      },
                      showLabels: true,
                      validateOnBlur: true
                    })
                  ]
                }
              )
            )
          }
        )
      );
    };
    var ResetPasswordEmail = uiEntry.withOverride("EmailPasswordResetPasswordEmail", EmailPasswordResetPasswordEmail);
    var EmailPasswordSubmitNewPassword = function(props) {
      var t = translationContext.useTranslation();
      var userContext = uiEntry.useUserContext();
      var _a = React.useState("READY"), status = _a[0], setStatus = _a[1];
      var onSuccess = function() {
        setStatus("SUCCESS");
      };
      var formFields = props.formFields, onSignInClicked = props.onSignInClicked;
      if (status === "SUCCESS") {
        return jsxRuntime.jsx(
          "div",
          genericComponentOverrideContext.__assign(
            { "data-supertokens": "container" },
            {
              children: jsxRuntime.jsxs(
                "div",
                genericComponentOverrideContext.__assign(
                  { "data-supertokens": "row" },
                  {
                    children: [
                      jsxRuntime.jsx(
                        "div",
                        genericComponentOverrideContext.__assign(
                          { "data-supertokens": "headerTitle" },
                          { children: t("EMAIL_PASSWORD_RESET_SUBMIT_PW_SUCCESS_HEADER_TITLE") }
                        )
                      ),
                      jsxRuntime.jsx(
                        formBase.FormRow,
                        {
                          children: jsxRuntime.jsxs(React.Fragment, {
                            children: [
                              jsxRuntime.jsx(
                                "div",
                                genericComponentOverrideContext.__assign(
                                  {
                                    "data-supertokens": "primaryText submitNewPasswordSuccessMessage"
                                  },
                                  {
                                    children: t(
                                      "EMAIL_PASSWORD_RESET_SUBMIT_PW_SUCCESS_DESC"
                                    )
                                  }
                                )
                              ),
                              jsxRuntime.jsx(button.Button, {
                                disabled: false,
                                isLoading: false,
                                type: "button",
                                onClick: onSignInClicked,
                                label: "EMAIL_PASSWORD_RESET_SUBMIT_PW_SUCCESS_SIGN_IN_BTN"
                              })
                            ]
                          })
                        },
                        "form-button"
                      )
                    ]
                  }
                )
              )
            }
          )
        );
      }
      return jsxRuntime.jsx(
        "div",
        genericComponentOverrideContext.__assign(
          { "data-supertokens": "container" },
          {
            children: jsxRuntime.jsxs(
              "div",
              genericComponentOverrideContext.__assign(
                { "data-supertokens": "row" },
                {
                  children: [
                    jsxRuntime.jsx(
                      "div",
                      genericComponentOverrideContext.__assign(
                        { "data-supertokens": "headerTitle" },
                        { children: t("EMAIL_PASSWORD_RESET_SUBMIT_PW_HEADER_TITLE") }
                      )
                    ),
                    jsxRuntime.jsx(
                      "div",
                      genericComponentOverrideContext.__assign(
                        { "data-supertokens": "headerSubtitle" },
                        {
                          children: jsxRuntime.jsx(
                            "div",
                            genericComponentOverrideContext.__assign(
                              { "data-supertokens": "secondaryText" },
                              { children: t("EMAIL_PASSWORD_RESET_SUBMIT_PW_HEADER_SUBTITLE") }
                            )
                          )
                        }
                      )
                    ),
                    props.error !== void 0 && jsxRuntime.jsx(generalError.GeneralError, { error: props.error }),
                    jsxRuntime.jsx(formBase.FormBase, {
                      formFields,
                      clearError: props.clearError,
                      onError: props.onError,
                      buttonLabel: "EMAIL_PASSWORD_RESET_SUBMIT_PW_CHANGE_PW_BTN",
                      onSuccess,
                      validateOnBlur: true,
                      callAPI: function(fields) {
                        return genericComponentOverrideContext.__awaiter(
                          void 0,
                          void 0,
                          void 0,
                          function() {
                            var validationErrors, response;
                            return genericComponentOverrideContext.__generator(this, function(_a2) {
                              switch (_a2.label) {
                                case 0:
                                  return [
                                    4,
                                    genericComponentOverrideContext.validateForm(
                                      fields,
                                      props.config.resetPasswordUsingTokenFeature.submitNewPasswordForm.formFields
                                    )
                                  ];
                                case 1:
                                  validationErrors = _a2.sent();
                                  if (validationErrors.length > 0) {
                                    return [
                                      2,
                                      {
                                        status: "FIELD_ERROR",
                                        formFields: validationErrors
                                      }
                                    ];
                                  }
                                  if (fields[0].value !== fields[1].value) {
                                    return [
                                      2,
                                      {
                                        status: "FIELD_ERROR",
                                        formFields: [
                                          {
                                            id: fields[1].id,
                                            error: "ERROR_CONFIRM_PASSWORD_NO_MATCH"
                                          }
                                        ]
                                      }
                                    ];
                                  }
                                  return [
                                    4,
                                    props.recipeImplementation.submitNewPassword({
                                      formFields: fields,
                                      userContext
                                    })
                                  ];
                                case 2:
                                  response = _a2.sent();
                                  if (response.status === "RESET_PASSWORD_INVALID_TOKEN_ERROR") {
                                    throw new STGeneralError__default.default(
                                      "EMAIL_PASSWORD_RESET_PASSWORD_INVALID_TOKEN_ERROR"
                                    );
                                  }
                                  return [
                                    2,
                                    response.status === "FIELD_ERROR" ? response : {
                                      status: "OK"
                                    }
                                  ];
                              }
                            });
                          }
                        );
                      },
                      showLabels: true
                    })
                  ]
                }
              )
            )
          }
        )
      );
    };
    var SubmitNewPassword = uiEntry.withOverride("EmailPasswordSubmitNewPassword", EmailPasswordSubmitNewPassword);
    function ResetPasswordUsingTokenTheme(props) {
      if (props.submitNewPasswordForm !== void 0) {
        return jsxRuntime.jsx(
          SubmitNewPassword,
          genericComponentOverrideContext.__assign({}, props.submitNewPasswordForm)
        );
      }
      return jsxRuntime.jsx(ResetPasswordEmail, genericComponentOverrideContext.__assign({}, props.enterEmailForm));
    }
    function ResetPasswordUsingTokenThemeWrapper(props) {
      var hasFont = translations.hasFontDefined(props.config.rootStyle);
      var userStyles = props.submitNewPasswordForm ? props.config.resetPasswordUsingTokenFeature.submitNewPasswordForm.style : props.config.resetPasswordUsingTokenFeature.enterEmailForm.style;
      return jsxRuntime.jsx(
        uiEntry.UserContextWrapper,
        genericComponentOverrideContext.__assign(
          { userContext: props.userContext },
          {
            children: jsxRuntime.jsx(
              translations$1.ThemeBase,
              genericComponentOverrideContext.__assign(
                { loadDefaultFont: !hasFont, userStyles: [props.config.rootStyle, userStyles] },
                {
                  children: jsxRuntime.jsx(
                    ResetPasswordUsingTokenTheme,
                    genericComponentOverrideContext.__assign({}, props)
                  )
                }
              )
            )
          }
        )
      );
    }
    var defaultTranslationsEmailPassword = {
      en: genericComponentOverrideContext.__assign(
        genericComponentOverrideContext.__assign(
          genericComponentOverrideContext.__assign({}, translations.defaultTranslationsCommon.en),
          translations$1.defaultTranslationsEmailVerification.en
        ),
        {
          EMAIL_PASSWORD_EMAIL_LABEL: "Email",
          EMAIL_PASSWORD_EMAIL_PLACEHOLDER: "Email address",
          EMAIL_PASSWORD_PASSWORD_LABEL: "Password",
          EMAIL_PASSWORD_PASSWORD_PLACEHOLDER: "Password",
          EMAIL_PASSWORD_SIGN_IN_HEADER_TITLE: "Sign In",
          EMAIL_PASSWORD_SIGN_IN_HEADER_SUBTITLE_START: "Not registered yet?",
          EMAIL_PASSWORD_SIGN_IN_HEADER_SUBTITLE_SIGN_UP_LINK: "Sign Up",
          EMAIL_PASSWORD_SIGN_IN_HEADER_SUBTITLE_END: "",
          EMAIL_PASSWORD_SIGN_IN_FOOTER_FORGOT_PW_LINK: "Forgot password?",
          EMAIL_PASSWORD_SIGN_IN_SUBMIT_BTN: "SIGN IN",
          EMAIL_PASSWORD_SIGN_IN_WRONG_CREDENTIALS_ERROR: "Incorrect email and password combination",
          EMAIL_PASSWORD_SIGN_UP_HEADER_TITLE: "Sign Up",
          EMAIL_PASSWORD_SIGN_UP_HEADER_SUBTITLE_START: "Already have an account?",
          EMAIL_PASSWORD_SIGN_UP_HEADER_SUBTITLE_SIGN_IN_LINK: "Sign In",
          EMAIL_PASSWORD_SIGN_UP_HEADER_SUBTITLE_END: "",
          EMAIL_PASSWORD_SIGN_UP_FOOTER_START: "By continuing, you agree to our ",
          EMAIL_PASSWORD_SIGN_UP_FOOTER_TOS: "Terms of Service",
          EMAIL_PASSWORD_SIGN_UP_FOOTER_AND: " and ",
          EMAIL_PASSWORD_SIGN_UP_FOOTER_PP: "Privacy Policy",
          EMAIL_PASSWORD_SIGN_UP_FOOTER_END: "",
          EMAIL_PASSWORD_SIGN_UP_SUBMIT_BTN: "SIGN UP",
          EMAIL_PASSWORD_EMAIL_ALREADY_EXISTS: "This email already exists. Please sign in instead",
          EMAIL_PASSWORD_RESET_HEADER_TITLE: "Reset your password",
          EMAIL_PASSWORD_RESET_HEADER_SUBTITLE: "We will send you an email to reset your password",
          EMAIL_PASSWORD_RESET_SEND_FALLBACK_EMAIL: "your account",
          EMAIL_PASSWORD_RESET_SEND_BEFORE_EMAIL: "A password reset email has been sent to ",
          EMAIL_PASSWORD_RESET_SEND_AFTER_EMAIL: ", if it exists in our system. ",
          EMAIL_PASSWORD_RESET_RESEND_LINK: "Resend or change email",
          EMAIL_PASSWORD_RESET_SEND_BTN: "Email me",
          EMAIL_PASSWORD_RESET_SIGN_IN_LINK: "Sign In",
          EMAIL_PASSWORD_RESET_SUBMIT_PW_SUCCESS_HEADER_TITLE: "Success!",
          EMAIL_PASSWORD_RESET_SUBMIT_PW_SUCCESS_DESC: "Your password has been updated successfully",
          EMAIL_PASSWORD_RESET_SUBMIT_PW_SUCCESS_SIGN_IN_BTN: "SIGN IN",
          EMAIL_PASSWORD_NEW_PASSWORD_LABEL: "New password",
          EMAIL_PASSWORD_NEW_PASSWORD_PLACEHOLDER: "New password",
          EMAIL_PASSWORD_CONFIRM_PASSWORD_LABEL: "Confirm password",
          EMAIL_PASSWORD_CONFIRM_PASSWORD_PLACEHOLDER: "Confirm your password",
          EMAIL_PASSWORD_RESET_SUBMIT_PW_HEADER_TITLE: "Change your password",
          EMAIL_PASSWORD_RESET_SUBMIT_PW_HEADER_SUBTITLE: "Enter a new password below to change your password",
          EMAIL_PASSWORD_RESET_SUBMIT_PW_CHANGE_PW_BTN: "CHANGE PASSWORD",
          EMAIL_PASSWORD_RESET_PASSWORD_INVALID_TOKEN_ERROR: "Invalid password reset token",
          ERROR_EMAIL_NON_STRING: "Email must be of type string",
          ERROR_EMAIL_INVALID: "Email is invalid",
          ERROR_PASSWORD_NON_STRING: "Password must be of type string",
          ERROR_PASSWORD_TOO_SHORT: "Password must contain at least 8 characters, including a number",
          ERROR_PASSWORD_TOO_LONG: "Password's length must be lesser than 100 characters",
          ERROR_PASSWORD_NO_ALPHA: "Password must contain at least one alphabet",
          ERROR_PASSWORD_NO_NUM: "Password must contain at least one number",
          ERROR_CONFIRM_PASSWORD_NO_MATCH: "Confirmation password doesn't match",
          ERROR_NON_OPTIONAL: "Field is not optional",
          /*
           * The following are error messages from our backend SDK.
           * These are returned as full messages to preserver compatibilty, but they work just like the keys above.
           * They are shown as is by default (setting the value to undefined will display the raw translation key)
           */
          "This email already exists. Please sign in instead.": void 0,
          "Field is not optional": void 0,
          "Password must contain at least 8 characters, including a number": void 0,
          "Password's length must be lesser than 100 characters": void 0,
          "Password must contain at least one alphabet": void 0,
          "Password must contain at least one number": void 0,
          "Email is invalid": void 0,
          "Reset password link was not created because of account take over risk. Please contact support. (ERR_CODE_001)": void 0,
          "Cannot sign up due to security reasons. Please try logging in, use a different login method or contact support. (ERR_CODE_007)": void 0,
          "Cannot sign in due to security reasons. Please try resetting your password, use a different login method or contact support. (ERR_CODE_008)": void 0
        }
      )
    };
    var ResetPasswordUsingToken$1 = function(props) {
      var token = genericComponentOverrideContext.getQueryParams("token");
      var _a = React__namespace.useState(), error = _a[0], setError = _a[1];
      var enterEmailFormFeature = props.recipe.config.resetPasswordUsingTokenFeature.enterEmailForm;
      var submitNewPasswordFormFeature = props.recipe.config.resetPasswordUsingTokenFeature.submitNewPasswordForm;
      var submitNewPasswordForm = token === void 0 || token === null ? void 0 : {
        error,
        onError: function(error2) {
          return setError(error2);
        },
        clearError: function() {
          return setError(void 0);
        },
        styleFromInit: submitNewPasswordFormFeature.style,
        formFields: submitNewPasswordFormFeature.formFields,
        recipeImplementation: props.recipe.webJSRecipe,
        config: props.recipe.config,
        onSignInClicked: function() {
          void genericComponentOverrideContext.SuperTokens.getInstanceOrThrow().redirectToAuth({
            show: "signin",
            history: props.history,
            redirectBack: false
          });
        },
        token
      };
      var enterEmailForm = {
        onBackButtonClicked: function() {
          return genericComponentOverrideContext.SuperTokens.getInstanceOrThrow().redirectToAuth({
            show: "signin",
            history: props.history,
            redirectBack: false
          });
        },
        error,
        onError: function(error2) {
          return setError(error2);
        },
        clearError: function() {
          return setError(void 0);
        },
        styleFromInit: enterEmailFormFeature.style,
        formFields: enterEmailFormFeature.formFields,
        recipeImplementation: props.recipe.webJSRecipe,
        config: props.recipe.config
      };
      var childProps = {
        config: props.recipe.config,
        submitNewPasswordForm,
        enterEmailForm
      };
      var recipeComponentOverrides = props.useComponentOverrides();
      return jsxRuntime.jsx(
        uiEntry.ComponentOverrideContext.Provider,
        genericComponentOverrideContext.__assign(
          { value: recipeComponentOverrides },
          {
            children: jsxRuntime.jsx(
              uiEntry.FeatureWrapper,
              genericComponentOverrideContext.__assign(
                {
                  useShadowDom: props.recipe.config.useShadowDom,
                  defaultStore: defaultTranslationsEmailPassword
                },
                {
                  children: jsxRuntime.jsxs(React.Fragment, {
                    children: [
                      props.children === void 0 && jsxRuntime.jsx(
                        ResetPasswordUsingTokenThemeWrapper,
                        genericComponentOverrideContext.__assign({}, childProps)
                      ),
                      props.children && React__namespace.Children.map(props.children, function(child) {
                        if (React__namespace.isValidElement(child)) {
                          return React__namespace.cloneElement(child, childProps);
                        }
                        return child;
                      })
                    ]
                  })
                }
              )
            )
          }
        )
      );
    };
    var SignInFooter = uiEntry.withOverride("EmailPasswordSignInFooter", function EmailPasswordSignInFooter(_a) {
      var onClick = _a.onClick;
      var t = translationContext.useTranslation();
      return jsxRuntime.jsx(
        "div",
        genericComponentOverrideContext.__assign(
          { "data-supertokens": "link secondaryText forgotPasswordLink", onClick },
          { children: t("EMAIL_PASSWORD_SIGN_IN_FOOTER_FORGOT_PW_LINK") }
        )
      );
    });
    var SignInForm = uiEntry.withOverride("EmailPasswordSignInForm", function EmailPasswordSignInForm(props) {
      var _this = this;
      var userContext = uiEntry.useUserContext();
      return jsxRuntime.jsx(formBase.FormBase, {
        formFields: props.formFields,
        clearError: props.clearError,
        onError: props.onError,
        buttonLabel: "EMAIL_PASSWORD_SIGN_IN_SUBMIT_BTN",
        onSuccess: props.onSuccess,
        callAPI: function(formFields) {
          return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
            var validationErrors, response;
            return genericComponentOverrideContext.__generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [
                    4,
                    genericComponentOverrideContext.validateForm(
                      formFields,
                      props.config.signInAndUpFeature.signInForm.formFields
                    )
                  ];
                case 1:
                  validationErrors = _a.sent();
                  if (validationErrors.length > 0) {
                    return [
                      2,
                      {
                        status: "FIELD_ERROR",
                        formFields: validationErrors
                      }
                    ];
                  }
                  return [
                    4,
                    props.recipeImplementation.signIn({
                      formFields,
                      userContext
                    })
                  ];
                case 2:
                  response = _a.sent();
                  if (response.status === "WRONG_CREDENTIALS_ERROR") {
                    throw new STGeneralError__default.default(
                      "EMAIL_PASSWORD_SIGN_IN_WRONG_CREDENTIALS_ERROR"
                    );
                  } else if (response.status === "SIGN_IN_NOT_ALLOWED") {
                    throw new STGeneralError__default.default(response.reason);
                  } else {
                    return [2, response];
                  }
              }
            });
          });
        },
        validateOnBlur: false,
        showLabels: true,
        footer: props.footer
      });
    });
    var SignInHeader = uiEntry.withOverride("EmailPasswordSignInHeader", function EmailPasswordSignInHeader(_a) {
      var onClick = _a.onClick;
      var t = translationContext.useTranslation();
      return jsxRuntime.jsxs(React.Fragment, {
        children: [
          jsxRuntime.jsx(
            "div",
            genericComponentOverrideContext.__assign(
              { "data-supertokens": "headerTitle" },
              { children: t("EMAIL_PASSWORD_SIGN_IN_HEADER_TITLE") }
            )
          ),
          jsxRuntime.jsx(
            "div",
            genericComponentOverrideContext.__assign(
              { "data-supertokens": "headerSubtitle" },
              {
                children: jsxRuntime.jsxs(
                  "div",
                  genericComponentOverrideContext.__assign(
                    { "data-supertokens": "secondaryText" },
                    {
                      children: [
                        t("EMAIL_PASSWORD_SIGN_IN_HEADER_SUBTITLE_START"),
                        jsxRuntime.jsx(
                          "span",
                          genericComponentOverrideContext.__assign(
                            { "data-supertokens": "link", onClick },
                            { children: t("EMAIL_PASSWORD_SIGN_IN_HEADER_SUBTITLE_SIGN_UP_LINK") }
                          )
                        ),
                        t("EMAIL_PASSWORD_SIGN_IN_HEADER_SUBTITLE_END")
                      ]
                    }
                  )
                )
              }
            )
          ),
          jsxRuntime.jsx("div", { "data-supertokens": "divider" })
        ]
      });
    });
    var SignIn = uiEntry.withOverride("EmailPasswordSignIn", function EmailPasswordSignIn(props) {
      return jsxRuntime.jsxs(
        "div",
        genericComponentOverrideContext.__assign(
          { "data-supertokens": "container" },
          {
            children: [
              jsxRuntime.jsxs(
                "div",
                genericComponentOverrideContext.__assign(
                  { "data-supertokens": "row" },
                  {
                    children: [
                      jsxRuntime.jsx(SignInHeader, { onClick: props.signUpClicked }),
                      props.error !== void 0 && jsxRuntime.jsx(generalError.GeneralError, { error: props.error }),
                      jsxRuntime.jsx(
                        SignInForm,
                        genericComponentOverrideContext.__assign({}, props, {
                          footer: jsxRuntime.jsx(SignInFooter, {
                            onClick: props.forgotPasswordClick
                          })
                        })
                      )
                    ]
                  }
                )
              ),
              jsxRuntime.jsx(SuperTokensBranding.SuperTokensBranding, {})
            ]
          }
        )
      );
    });
    var SignUpFooter = uiEntry.withOverride("EmailPasswordSignUpFooter", function EmailPasswordSignUpFooter(_a) {
      var termsOfServiceLink = _a.termsOfServiceLink, privacyPolicyLink = _a.privacyPolicyLink;
      var t = translationContext.useTranslation();
      if (termsOfServiceLink === void 0 && privacyPolicyLink === void 0) {
        return null;
      }
      return jsxRuntime.jsxs(
        "div",
        genericComponentOverrideContext.__assign(
          { "data-supertokens": "secondaryText privacyPolicyAndTermsAndConditions" },
          {
            children: [
              t("EMAIL_PASSWORD_SIGN_UP_FOOTER_START"),
              termsOfServiceLink !== void 0 && jsxRuntime.jsx(
                "a",
                genericComponentOverrideContext.__assign(
                  {
                    "data-supertokens": "link",
                    href: termsOfServiceLink,
                    target: "_blank",
                    rel: "noopener noreferer"
                  },
                  { children: t("EMAIL_PASSWORD_SIGN_UP_FOOTER_TOS") }
                )
              ),
              termsOfServiceLink !== void 0 && privacyPolicyLink !== void 0 && t("EMAIL_PASSWORD_SIGN_UP_FOOTER_AND"),
              privacyPolicyLink !== void 0 && jsxRuntime.jsx(
                "a",
                genericComponentOverrideContext.__assign(
                  {
                    "data-supertokens": "link",
                    href: privacyPolicyLink,
                    target: "_blank",
                    rel: "noopener noreferer"
                  },
                  { children: t("EMAIL_PASSWORD_SIGN_UP_FOOTER_PP") }
                )
              ),
              t("EMAIL_PASSWORD_SIGN_UP_FOOTER_END")
            ]
          }
        )
      );
    });
    var SignUpForm = uiEntry.withOverride("EmailPasswordSignUpForm", function EmailPasswordSignUpForm(props) {
      var _this = this;
      var userContext = uiEntry.useUserContext();
      return jsxRuntime.jsx(formBase.FormBase, {
        formFields: props.formFields,
        clearError: props.clearError,
        onError: props.onError,
        buttonLabel: "EMAIL_PASSWORD_SIGN_UP_SUBMIT_BTN",
        onSuccess: props.onSuccess,
        callAPI: function(formFields) {
          return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
            var validationErrors, res;
            return genericComponentOverrideContext.__generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [
                    4,
                    genericComponentOverrideContext.validateForm(
                      formFields,
                      props.config.signInAndUpFeature.signUpForm.formFields
                    )
                  ];
                case 1:
                  validationErrors = _a.sent();
                  if (validationErrors.length > 0) {
                    return [
                      2,
                      {
                        status: "FIELD_ERROR",
                        formFields: validationErrors
                      }
                    ];
                  }
                  return [
                    4,
                    props.recipeImplementation.signUp({
                      formFields,
                      userContext
                    })
                  ];
                case 2:
                  res = _a.sent();
                  if (res.status === "SIGN_UP_NOT_ALLOWED") {
                    throw new STGeneralError__default$1.default(res.reason);
                  }
                  return [2, res];
              }
            });
          });
        },
        validateOnBlur: true,
        showLabels: true,
        footer: props.footer
      });
    });
    var SignUpHeader = uiEntry.withOverride("EmailPasswordSignUpHeader", function EmailPasswordSignUpHeader(_a) {
      var onClick = _a.onClick;
      var t = translationContext.useTranslation();
      return jsxRuntime.jsxs(React.Fragment, {
        children: [
          jsxRuntime.jsx(
            "div",
            genericComponentOverrideContext.__assign(
              { "data-supertokens": "headerTitle" },
              { children: t("EMAIL_PASSWORD_SIGN_UP_HEADER_TITLE") }
            )
          ),
          jsxRuntime.jsx(
            "div",
            genericComponentOverrideContext.__assign(
              { "data-supertokens": "headerSubtitle" },
              {
                children: jsxRuntime.jsxs(
                  "div",
                  genericComponentOverrideContext.__assign(
                    { "data-supertokens": "secondaryText" },
                    {
                      children: [
                        t("EMAIL_PASSWORD_SIGN_UP_HEADER_SUBTITLE_START"),
                        jsxRuntime.jsx(
                          "span",
                          genericComponentOverrideContext.__assign(
                            { "data-supertokens": "link", onClick },
                            { children: t("EMAIL_PASSWORD_SIGN_UP_HEADER_SUBTITLE_SIGN_IN_LINK") }
                          )
                        ),
                        t("EMAIL_PASSWORD_SIGN_UP_HEADER_SUBTITLE_END")
                      ]
                    }
                  )
                )
              }
            )
          ),
          jsxRuntime.jsx("div", { "data-supertokens": "divider" })
        ]
      });
    });
    var SignUp = uiEntry.withOverride("EmailPasswordSignUp", function EmailPasswordSignUp(props) {
      return jsxRuntime.jsxs(
        "div",
        genericComponentOverrideContext.__assign(
          { "data-supertokens": "container" },
          {
            children: [
              jsxRuntime.jsxs(
                "div",
                genericComponentOverrideContext.__assign(
                  { "data-supertokens": "row" },
                  {
                    children: [
                      jsxRuntime.jsx(SignUpHeader, { onClick: props.signInClicked }),
                      props.error !== void 0 && jsxRuntime.jsx(generalError.GeneralError, { error: props.error }),
                      jsxRuntime.jsx(
                        SignUpForm,
                        genericComponentOverrideContext.__assign({}, props, {
                          footer: jsxRuntime.jsx(SignUpFooter, {
                            privacyPolicyLink: props.config.signInAndUpFeature.signUpForm.privacyPolicyLink,
                            termsOfServiceLink: props.config.signInAndUpFeature.signUpForm.termsOfServiceLink
                          })
                        })
                      )
                    ]
                  }
                )
              ),
              jsxRuntime.jsx(SuperTokensBranding.SuperTokensBranding, {})
            ]
          }
        )
      );
    });
    var SignInAndUpTheme = function(props) {
      if (props.featureState.isSignUp) {
        return jsxRuntime.jsx(
          SignUp,
          genericComponentOverrideContext.__assign({}, props.signUpForm, {
            signInClicked: function() {
              props.dispatch({ type: "setSignIn" });
            }
          })
        );
      }
      return jsxRuntime.jsx(
        SignIn,
        genericComponentOverrideContext.__assign({}, props.signInForm, {
          signUpClicked: function() {
            props.dispatch({ type: "setSignUp" });
          }
        })
      );
    };
    function SignInAndUpThemeWrapper(props) {
      var hasFont = translations.hasFontDefined(props.config.rootStyle);
      var activeStyle = props.featureState.isSignUp ? props.config.signInAndUpFeature.signUpForm.style : props.config.signInAndUpFeature.signInForm.style;
      return jsxRuntime.jsx(
        uiEntry.UserContextWrapper,
        genericComponentOverrideContext.__assign(
          { userContext: props.userContext },
          {
            children: jsxRuntime.jsx(
              translations$1.ThemeBase,
              genericComponentOverrideContext.__assign(
                { loadDefaultFont: !hasFont, userStyles: [props.config.rootStyle, activeStyle] },
                {
                  children: jsxRuntime.jsx(
                    SignInAndUpTheme,
                    genericComponentOverrideContext.__assign({}, props)
                  )
                }
              )
            )
          }
        )
      );
    }
    var useFeatureReducer = function(recipe2) {
      return React__namespace.useReducer(
        function(oldState, action) {
          switch (action.type) {
            case "setSignIn":
              return genericComponentOverrideContext.__assign(
                genericComponentOverrideContext.__assign({}, oldState),
                { error: void 0, isSignUp: false }
              );
            case "setSignUp":
              return genericComponentOverrideContext.__assign(
                genericComponentOverrideContext.__assign({}, oldState),
                { error: void 0, isSignUp: true }
              );
            case "setError":
              return genericComponentOverrideContext.__assign(
                genericComponentOverrideContext.__assign({}, oldState),
                { error: action.error }
              );
            default:
              return oldState;
          }
        },
        {
          isSignUp: recipe2 === void 0 ? false : recipe2.config.signInAndUpFeature.defaultToSignUp,
          user: void 0,
          error: void 0
        },
        function(initArg) {
          var show = genericComponentOverrideContext.getQueryParams("show");
          var isSignUp = initArg.isSignUp;
          if (show !== null) {
            isSignUp = show === "signup";
          }
          return {
            isSignUp,
            user: void 0,
            error: void 0
          };
        }
      );
    };
    function useChildProps(recipe$12, state, dispatch, history) {
      var _this = this;
      var recipeImplementation = React.useMemo(
        function() {
          return recipe$12 && getModifiedRecipeImplementation(recipe$12.webJSRecipe);
        },
        [recipe$12]
      );
      var userContext = uiEntry.useUserContext();
      var onSignInSuccess = React.useCallback(
        function(response) {
          return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
            return genericComponentOverrideContext.__generator(this, function(_a) {
              return [
                2,
                recipe.Session.getInstanceOrThrow().validateGlobalClaimsAndHandleSuccessRedirection(
                  {
                    rid: recipe$12.config.recipeId,
                    successRedirectContext: {
                      action: "SUCCESS",
                      isNewRecipeUser: false,
                      user: response.user,
                      redirectToPath: genericComponentOverrideContext.getRedirectToPathFromURL()
                    }
                  },
                  userContext,
                  history
                )
              ];
            });
          });
        },
        [recipe$12, userContext, history]
      );
      var onSignUpSuccess = React.useCallback(
        function(response) {
          return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
            return genericComponentOverrideContext.__generator(this, function(_a) {
              return [
                2,
                recipe.Session.getInstanceOrThrow().validateGlobalClaimsAndHandleSuccessRedirection(
                  {
                    rid: recipe$12.config.recipeId,
                    successRedirectContext: {
                      action: "SUCCESS",
                      isNewRecipeUser: true,
                      user: response.user,
                      redirectToPath: genericComponentOverrideContext.getRedirectToPathFromURL()
                    }
                  },
                  userContext,
                  history
                )
              ];
            });
          });
        },
        [recipe$12, userContext, history]
      );
      return React.useMemo(
        function() {
          if (recipe$12 === void 0 || recipeImplementation === void 0) {
            return;
          }
          var signInAndUpFeature = recipe$12.config.signInAndUpFeature;
          var signUpFeature = signInAndUpFeature.signUpForm;
          var signInFeature = signInAndUpFeature.signInForm;
          var signInForm = {
            recipeImplementation,
            config: recipe$12.config,
            styleFromInit: signInFeature.style,
            formFields: signInFeature.formFields,
            error: state.error,
            clearError: function() {
              return dispatch({ type: "setError", error: void 0 });
            },
            onError: function(error) {
              return dispatch({ type: "setError", error });
            },
            onSuccess: onSignInSuccess,
            forgotPasswordClick: function() {
              return recipe$12.redirect({ action: "RESET_PASSWORD" }, history);
            }
          };
          var signUpForm = {
            recipeImplementation,
            config: recipe$12.config,
            styleFromInit: signUpFeature.style,
            formFields: getThemeSignUpFeatureFormFields(signUpFeature.formFields, recipe$12, userContext),
            error: state.error,
            clearError: function() {
              return dispatch({ type: "setError", error: void 0 });
            },
            onError: function(error) {
              return dispatch({ type: "setError", error });
            },
            onSuccess: onSignUpSuccess
          };
          return {
            config: recipe$12.config,
            signInForm,
            signUpForm
          };
        },
        [recipe$12, state, dispatch]
      );
    }
    var SignInAndUpFeature = function(props) {
      var _a = useFeatureReducer(props.recipe), state = _a[0], dispatch = _a[1];
      var childProps = useChildProps(props.recipe, state, dispatch, props.history);
      var recipeComponentOverrides = props.useComponentOverrides();
      return jsxRuntime.jsx(
        uiEntry.ComponentOverrideContext.Provider,
        genericComponentOverrideContext.__assign(
          { value: recipeComponentOverrides },
          {
            children: jsxRuntime.jsx(
              uiEntry.FeatureWrapper,
              genericComponentOverrideContext.__assign(
                {
                  useShadowDom: props.recipe.config.useShadowDom,
                  defaultStore: defaultTranslationsEmailPassword
                },
                {
                  children: jsxRuntime.jsxs(React.Fragment, {
                    children: [
                      props.children === void 0 && jsxRuntime.jsx(
                        SignInAndUpThemeWrapper,
                        genericComponentOverrideContext.__assign({}, childProps, {
                          featureState: state,
                          dispatch
                        })
                      ),
                      props.children && React__namespace.Children.map(props.children, function(child) {
                        if (React__namespace.isValidElement(child)) {
                          return React__namespace.cloneElement(
                            child,
                            genericComponentOverrideContext.__assign(
                              genericComponentOverrideContext.__assign({}, childProps),
                              { featureState: state, dispatch }
                            )
                          );
                        }
                        return child;
                      })
                    ]
                  })
                }
              )
            )
          }
        )
      );
    };
    var getModifiedRecipeImplementation = function(origImpl) {
      return genericComponentOverrideContext.__assign({}, origImpl);
    };
    function getThemeSignUpFeatureFormFields(formFields, recipe2, userContext) {
      var _this = this;
      var emailPasswordOnly = formFields.length === 2;
      return formFields.map(function(field) {
        return genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, field), {
          showIsRequired: function() {
            if (emailPasswordOnly) {
              return false;
            }
            return field.optional === false;
          }(),
          validate: function() {
            if (field.id !== "email") {
              return field.validate;
            }
            return function(value) {
              return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
                var error, emailExists, err_1;
                return genericComponentOverrideContext.__generator(this, function(_a) {
                  switch (_a.label) {
                    case 0:
                      return [4, field.validate(value)];
                    case 1:
                      error = _a.sent();
                      if (error !== void 0) {
                        return [2, error];
                      }
                      if (typeof value !== "string") {
                        return [2, "GENERAL_ERROR_EMAIL_NON_STRING"];
                      }
                      _a.label = 2;
                    case 2:
                      _a.trys.push([2, 4, , 5]);
                      return [
                        4,
                        recipe2.webJSRecipe.doesEmailExist({
                          email: value,
                          userContext
                        })
                      ];
                    case 3:
                      emailExists = _a.sent().doesExist;
                      if (emailExists) {
                        return [2, "EMAIL_PASSWORD_EMAIL_ALREADY_EXISTS"];
                      }
                      return [3, 5];
                    case 4:
                      err_1 = _a.sent();
                      if (STGeneralError__default.default.isThisError(err_1)) {
                        return [2, err_1.message];
                      }
                      return [3, 5];
                    case 5:
                      return [2, void 0];
                  }
                });
              });
            };
          }()
        });
      });
    }
    var EmailPasswordPreBuiltUI = (
      /** @class */
      function(_super) {
        genericComponentOverrideContext.__extends(EmailPasswordPreBuiltUI2, _super);
        function EmailPasswordPreBuiltUI2(recipeInstance) {
          var _this = _super.call(this) || this;
          _this.recipeInstance = recipeInstance;
          _this.getFeatures = function(useComponentOverrides) {
            if (useComponentOverrides === void 0) {
              useComponentOverrides = componentOverrideContext.useContext;
            }
            var features = {};
            if (_this.recipeInstance.config.signInAndUpFeature.disableDefaultUI !== true) {
              var normalisedFullPath = _this.recipeInstance.config.appInfo.websiteBasePath.appendPath(
                new NormalisedURLPath__default.default("/")
              );
              features[normalisedFullPath.getAsStringDangerous()] = {
                matches: genericComponentOverrideContext.matchRecipeIdUsingQueryParams(
                  _this.recipeInstance.config.recipeId
                ),
                component: function(props) {
                  return _this.getFeatureComponent("signinup", props, useComponentOverrides);
                },
                recipeID: recipe$1.EmailPassword.RECIPE_ID
              };
            }
            if (_this.recipeInstance.config.resetPasswordUsingTokenFeature.disableDefaultUI !== true) {
              var normalisedFullPath = _this.recipeInstance.config.appInfo.websiteBasePath.appendPath(
                new NormalisedURLPath__default.default(validators.DEFAULT_RESET_PASSWORD_PATH)
              );
              features[normalisedFullPath.getAsStringDangerous()] = {
                matches: genericComponentOverrideContext.matchRecipeIdUsingQueryParams(
                  _this.recipeInstance.config.recipeId
                ),
                component: function(props) {
                  return _this.getFeatureComponent("resetpassword", props, useComponentOverrides);
                },
                recipeID: recipe$1.EmailPassword.RECIPE_ID
              };
            }
            return features;
          };
          _this.getFeatureComponent = function(componentName, props, useComponentOverrides) {
            if (useComponentOverrides === void 0) {
              useComponentOverrides = componentOverrideContext.useContext;
            }
            if (componentName === "signinup") {
              if (props.redirectOnSessionExists !== false) {
                return jsxRuntime.jsx(
                  uiEntry.UserContextWrapper,
                  genericComponentOverrideContext.__assign(
                    { userContext: props.userContext },
                    {
                      children: jsxRuntime.jsx(
                        SuperTokensBranding.AuthWidgetWrapper,
                        genericComponentOverrideContext.__assign(
                          { authRecipe: _this.recipeInstance, history: props.history },
                          {
                            children: jsxRuntime.jsx(
                              SignInAndUpFeature,
                              genericComponentOverrideContext.__assign(
                                { recipe: _this.recipeInstance },
                                props,
                                { useComponentOverrides }
                              )
                            )
                          }
                        )
                      )
                    }
                  )
                );
              } else {
                return jsxRuntime.jsx(
                  uiEntry.UserContextWrapper,
                  genericComponentOverrideContext.__assign(
                    { userContext: props.userContext },
                    {
                      children: jsxRuntime.jsx(
                        SignInAndUpFeature,
                        genericComponentOverrideContext.__assign({ recipe: _this.recipeInstance }, props, {
                          useComponentOverrides
                        })
                      )
                    }
                  )
                );
              }
            } else if (componentName === "resetpassword") {
              return jsxRuntime.jsx(
                uiEntry.UserContextWrapper,
                genericComponentOverrideContext.__assign(
                  { userContext: props.userContext },
                  {
                    children: jsxRuntime.jsx(
                      ResetPasswordUsingToken$1,
                      genericComponentOverrideContext.__assign({ recipe: _this.recipeInstance }, props, {
                        useComponentOverrides
                      })
                    )
                  }
                )
              );
            } else {
              throw new Error("Should never come here.");
            }
          };
          return _this;
        }
        EmailPasswordPreBuiltUI2.getInstanceOrInitAndGetInstance = function() {
          if (EmailPasswordPreBuiltUI2.instance === void 0) {
            var recipeInstance = recipe$1.EmailPassword.getInstanceOrThrow();
            EmailPasswordPreBuiltUI2.instance = new EmailPasswordPreBuiltUI2(recipeInstance);
          }
          return EmailPasswordPreBuiltUI2.instance;
        };
        EmailPasswordPreBuiltUI2.getFeatures = function(useComponentOverrides) {
          if (useComponentOverrides === void 0) {
            useComponentOverrides = componentOverrideContext.useContext;
          }
          return EmailPasswordPreBuiltUI2.getInstanceOrInitAndGetInstance().getFeatures(useComponentOverrides);
        };
        EmailPasswordPreBuiltUI2.getFeatureComponent = function(componentName, props, useComponentOverrides) {
          if (useComponentOverrides === void 0) {
            useComponentOverrides = componentOverrideContext.useContext;
          }
          return EmailPasswordPreBuiltUI2.getInstanceOrInitAndGetInstance().getFeatureComponent(
            componentName,
            props,
            useComponentOverrides
          );
        };
        EmailPasswordPreBuiltUI2.reset = function() {
          if (!genericComponentOverrideContext.isTest()) {
            return;
          }
          EmailPasswordPreBuiltUI2.instance = void 0;
          return;
        };
        EmailPasswordPreBuiltUI2.SignInAndUp = function(prop) {
          if (prop === void 0) {
            prop = {};
          }
          return EmailPasswordPreBuiltUI2.getInstanceOrInitAndGetInstance().getFeatureComponent("signinup", prop);
        };
        EmailPasswordPreBuiltUI2.ResetPasswordUsingToken = function(prop) {
          return EmailPasswordPreBuiltUI2.getInstanceOrInitAndGetInstance().getFeatureComponent("resetpassword", prop);
        };
        EmailPasswordPreBuiltUI2.ResetPasswordUsingTokenTheme = ResetPasswordUsingTokenThemeWrapper;
        EmailPasswordPreBuiltUI2.SignInAndUpTheme = SignInAndUpThemeWrapper;
        return EmailPasswordPreBuiltUI2;
      }(uiEntry.RecipeRouter)
    );
    var SignInAndUp = EmailPasswordPreBuiltUI.SignInAndUp;
    var ResetPasswordUsingToken = EmailPasswordPreBuiltUI.ResetPasswordUsingToken;
    exports.EmailPasswordPreBuiltUI = EmailPasswordPreBuiltUI;
    exports.ResetPasswordUsingToken = ResetPasswordUsingToken;
    exports.ResetPasswordUsingTokenThemeWrapper = ResetPasswordUsingTokenThemeWrapper;
    exports.SignInAndUp = SignInAndUp;
    exports.SignInAndUpThemeWrapper = SignInAndUpThemeWrapper;
    exports.SignInFooter = SignInFooter;
    exports.SignInForm = SignInForm;
    exports.SignInHeader = SignInHeader;
    exports.SignUpFooter = SignUpFooter;
    exports.SignUpForm = SignUpForm;
    exports.SignUpHeader = SignUpHeader;
    exports.defaultTranslationsEmailPassword = defaultTranslationsEmailPassword;
    exports.useChildProps = useChildProps;
    exports.useFeatureReducer = useFeatureReducer;
  }
});

// node_modules/supertokens-auth-react/lib/build/thirdparty-shared2.js
var require_thirdparty_shared2 = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/thirdparty-shared2.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var jsxRuntime = require_jsx_runtime();
    var NormalisedURLPath = require_normalisedURLPath2();
    var uiEntry = require_index2();
    var SuperTokensBranding = require_SuperTokensBranding();
    var recipe = require_thirdparty_shared();
    var React = require_react();
    var translations = require_translations();
    var generalError = require_emailpassword_shared();
    var STGeneralError = require_error2();
    var translationContext = require_translationContext();
    var recipe$1 = require_session_shared2();
    function _interopDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    function _interopNamespace(e) {
      if (e && e.__esModule)
        return e;
      var n = /* @__PURE__ */ Object.create(null);
      if (e) {
        Object.keys(e).forEach(function(k) {
          if (k !== "default") {
            var d = Object.getOwnPropertyDescriptor(e, k);
            Object.defineProperty(
              n,
              k,
              d.get ? d : {
                enumerable: true,
                get: function() {
                  return e[k];
                }
              }
            );
          }
        });
      }
      n.default = e;
      return Object.freeze(n);
    }
    var NormalisedURLPath__default = _interopDefault(NormalisedURLPath);
    var React__namespace = _interopNamespace(React);
    var STGeneralError__default = _interopDefault(STGeneralError);
    var styles = '[data-supertokens~="container"] {\n    --palette-background: 255, 255, 255;\n    --palette-inputBackground: 250, 250, 250;\n    --palette-inputBorder: 224, 224, 224;\n    --palette-primary: 255, 155, 51;\n    --palette-primaryBorder: 238, 141, 35;\n    --palette-success: 65, 167, 0;\n    --palette-successBackground: 217, 255, 191;\n    --palette-error: 255, 23, 23;\n    --palette-errorBackground: 255, 241, 235;\n    --palette-textTitle: 34, 34, 34;\n    --palette-textLabel: 34, 34, 34;\n    --palette-textInput: 34, 34, 34;\n    --palette-textPrimary: 101, 101, 101;\n    --palette-textLink: 0, 118, 255;\n    --palette-buttonText: 255, 255, 255;\n    --palette-textGray: 128, 128, 128;\n    --palette-superTokensBrandingBackground: 242, 245, 246;\n    --palette-superTokensBrandingText: 173, 189, 196;\n\n    --font-size-0: 12px;\n    --font-size-1: 14px;\n    --font-size-2: 16px;\n    --font-size-3: 19px;\n    --font-size-4: 24px;\n}\n/*\n * Default styles.\n */\n@-webkit-keyframes slideTop {\n    0% {\n        -webkit-transform: translateY(-5px);\n                transform: translateY(-5px);\n    }\n    100% {\n        -webkit-transform: translateY(0px);\n                transform: translateY(0px);\n    }\n}\n@keyframes slideTop {\n    0% {\n        -webkit-transform: translateY(-5px);\n                transform: translateY(-5px);\n    }\n    100% {\n        -webkit-transform: translateY(0px);\n                transform: translateY(0px);\n    }\n}\n@-webkit-keyframes swing-in-top-fwd {\n    0% {\n        -webkit-transform: rotateX(-100deg);\n        transform: rotateX(-100deg);\n        -webkit-transform-origin: top;\n        transform-origin: top;\n        opacity: 0;\n    }\n    100% {\n        -webkit-transform: rotateX(0deg);\n        transform: rotateX(0deg);\n        -webkit-transform-origin: top;\n        transform-origin: top;\n        opacity: 1;\n    }\n}\n@keyframes swing-in-top-fwd {\n    0% {\n        -webkit-transform: rotateX(-100deg);\n        transform: rotateX(-100deg);\n        -webkit-transform-origin: top;\n        transform-origin: top;\n        opacity: 0;\n    }\n    100% {\n        -webkit-transform: rotateX(0deg);\n        transform: rotateX(0deg);\n        -webkit-transform-origin: top;\n        transform-origin: top;\n        opacity: 1;\n    }\n}\n[data-supertokens~="container"] {\n    font-family: "Rubik", sans-serif;\n    margin: 12px auto;\n    margin-top: 26px;\n    margin-bottom: 26px;\n    width: 420px;\n    text-align: center;\n    border-radius: 8px;\n    box-shadow: 1px 1px 10px rgba(0, 0, 0, 0.16);\n    background-color: rgb(var(--palette-background));\n}\n@media (max-width: 440px) {\n    [data-supertokens~="container"] {\n        width: 95vw;\n    }\n}\n[data-supertokens~="row"] {\n    margin: 0 auto;\n    width: 76%;\n    padding-top: 30px;\n    padding-bottom: 10px;\n}\n[data-supertokens~="superTokensBranding"] {\n    display: block;\n    margin: 0 auto;\n    background: rgb(var(--palette-superTokensBrandingBackground));\n    color: rgb(var(--palette-superTokensBrandingText));\n    text-decoration: none;\n    width: -webkit-fit-content;\n    width: -moz-fit-content;\n    width: fit-content;\n    border-radius: 6px 6px 0 0;\n    padding: 4px 9px;\n    font-weight: 300;\n    font-size: var(--font-size-0);\n    letter-spacing: 0.4px;\n}\n[data-supertokens~="generalError"] {\n    background: rgb(var(--palette-errorBackground));\n    padding-top: 10px;\n    padding-bottom: 10px;\n    margin-bottom: 15px;\n    padding-left: 18px;\n    padding-right: 18px;\n    letter-spacing: 0.2px;\n    font-size: var(--font-size-1);\n    border-radius: 8px;\n    color: rgb(var(--palette-error));\n    -webkit-animation: swing-in-top-fwd 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) both;\n            animation: swing-in-top-fwd 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) both;\n    word-wrap: break-word;\n}\n[data-supertokens~="headerTitle"] {\n    font-size: var(--font-size-4);\n    line-height: 40px;\n    letter-spacing: 0.58px;\n    font-weight: 800;\n    margin-bottom: 2px;\n    color: rgb(var(--palette-textTitle));\n}\n[data-supertokens~="headerSubtitle"] {\n    margin-bottom: 21px;\n}\n[data-supertokens~="privacyPolicyAndTermsAndConditions"] {\n    max-width: 300px;\n    margin-top: 10px;\n}\n[data-supertokens~="privacyPolicyAndTermsAndConditions"] a {\n    line-height: 21px;\n}\n/* TODO: split the link style into separate things*/\n/* We add this before primary and secondary text, because if they are applied to the same element the other ones take priority */\n[data-supertokens~="link"] {\n    padding-left: 3px;\n    padding-right: 3px;\n    color: rgb(var(--palette-textLink));\n    font-size: var(--font-size-1);\n    cursor: pointer;\n    letter-spacing: 0.16px;\n    line-height: 26px;\n}\n[data-supertokens~="primaryText"] {\n    font-size: var(--font-size-1);\n    font-weight: 500;\n    letter-spacing: 0.4px;\n    line-height: 21px;\n    color: rgb(var(--palette-textLabel));\n}\n[data-supertokens~="secondaryText"] {\n    font-size: var(--font-size-1);\n    font-weight: 300;\n    letter-spacing: 0.4px;\n    color: rgb(var(--palette-textPrimary));\n}\n[data-supertokens~="divider"] {\n    margin-top: 1em;\n    margin-bottom: 1em;\n    border-bottom: 0.3px solid #dddddd;\n    align-items: center;\n    padding-bottom: 5px;\n}\n[data-supertokens~="headerTinyTitle"] {\n    margin-top: 13px;\n    font-size: var(--font-size-3);\n    letter-spacing: 1.1px;\n    font-weight: 500;\n    line-height: 28px;\n}\n[data-supertokens~="secondaryLinkWithArrow"] {\n    margin-top: 10px;\n    margin-bottom: 30px;\n    cursor: pointer;\n}\n[data-supertokens~="secondaryLinkWithArrow"]:hover {\n    position: relative;\n    left: 2px;\n    word-spacing: 4px;\n}\n[data-supertokens~="generalSuccess"] {\n    color: rgb(var(--palette-success));\n    font-size: var(--font-size-1);\n    background: rgb(var(--palette-successBackground));\n    -webkit-animation: swing-in-top-fwd 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) both;\n            animation: swing-in-top-fwd 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) both;\n    padding: 9px 15px 9px 15px;\n    border-radius: 6px;\n    display: inline-block;\n}\n[data-supertokens~="spinner"] {\n    width: 80px;\n    height: auto;\n    padding-top: 20px;\n    padding-bottom: 40px;\n    margin: 0 auto;\n}\n[data-supertokens~="error"] {\n    color: rgb(var(--palette-error));\n}\n[data-supertokens~="linkButton"] {\n    background-color: transparent;\n    border: 0;\n}\n[data-supertokens~="secondaryLinkWithLeftArrow"] {\n    margin-top: 10px;\n    margin-bottom: 40px;\n    cursor: pointer;\n}\n[data-supertokens~="secondaryLinkWithLeftArrow"] svg {\n    margin-right: 0.3em;\n}\n[data-supertokens~="secondaryLinkWithLeftArrow"]:hover svg {\n    position: relative;\n    left: -4px;\n}\n[data-supertokens~="button"] {\n    background-color: rgb(var(--palette-primary));\n    color: rgb(var(--palette-buttonText));\n    width: 100%;\n    height: 34px;\n    font-weight: 700;\n    border-width: 1px;\n    border-style: solid;\n    border-radius: 6px;\n    border-color: rgb(var(--palette-primaryBorder));\n    background-position: center;\n    transition: all 0.4s;\n    background-size: 12000%;\n    cursor: pointer;\n}\n[data-supertokens~="button"]:disabled {\n    border: none;\n    cursor: no-drop;\n}\n[data-supertokens~="button"]:active {\n    outline: none;\n    transition: all 0s;\n    background-size: 100%;\n    -webkit-filter: brightness(0.85);\n            filter: brightness(0.85);\n}\n[data-supertokens~="button"]:focus {\n    outline: none;\n}\n[data-supertokens~="row"] {\n    padding-bottom: 30px;\n}\n[data-supertokens~="providerContainer"] {\n    padding-top: 9px;\n    padding-bottom: 9px;\n}\n[data-supertokens~="providerButton"] {\n    border-color: rgb(221, 221, 221) !important;\n}\n[data-supertokens~="providerButton"] {\n    min-height: 32px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    padding: 2px 8px;\n\n    background-color: white;\n    color: black;\n}\n[data-supertokens~="providerButton"]:hover {\n    -webkit-filter: none !important;\n            filter: none !important;\n}\n[data-supertokens~="providerButton"]:hover {\n    background-color: #fafafa;\n}\n[data-supertokens~="providerButtonLeft"] {\n    min-width: 34px;\n    margin-left: 66px;\n}\n[data-supertokens~="providerButtonLogo"] {\n    height: 30px;\n    display: flex;\n}\n[data-supertokens~="providerButtonLogoCenter"] {\n    display: flex;\n    margin: auto;\n}\n[data-supertokens~="providerButtonText"] {\n    font-weight: 400;\n    text-align: center;\n    justify-content: center;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    display: inline-block;\n}\n[data-supertokens~="providerButtonText"]:only-child {\n    margin: 0 auto;\n}\n';
    var ThemeBase = function(_a) {
      var children = _a.children, userStyles = _a.userStyles, loadDefaultFont = _a.loadDefaultFont;
      return jsxRuntime.jsxs(React.Fragment, {
        children: [
          children,
          loadDefaultFont && jsxRuntime.jsx("link", {
            href: "//fonts.googleapis.com/css?family=Rubik:wght@300;400;600;500;700",
            rel: "stylesheet",
            type: "text/css"
          }),
          jsxRuntime.jsxs("style", { children: [styles, userStyles.join("\n")] })
        ]
      });
    };
    var ThirdPartySignInAndUpProvidersForm = function(props) {
      var userContext = uiEntry.useUserContext();
      var signInClick = function(providerId) {
        return genericComponentOverrideContext.__awaiter(void 0, void 0, void 0, function() {
          var response, generalError2, e_1;
          return genericComponentOverrideContext.__generator(this, function(_a) {
            switch (_a.label) {
              case 0:
                _a.trys.push([0, 5, , 6]);
                response = void 0;
                generalError2 = void 0;
                _a.label = 1;
              case 1:
                _a.trys.push([1, 3, , 4]);
                return [
                  4,
                  recipe.redirectToThirdPartyLogin({
                    recipeImplementation: props.recipeImplementation,
                    thirdPartyId: providerId,
                    config: props.config,
                    userContext
                  })
                ];
              case 2:
                response = _a.sent();
                return [3, 4];
              case 3:
                e_1 = _a.sent();
                if (STGeneralError__default.default.isThisError(e_1)) {
                  generalError2 = e_1;
                } else {
                  throw e_1;
                }
                return [3, 4];
              case 4:
                if (generalError2 !== void 0) {
                  props.dispatch({
                    type: "setError",
                    error: generalError2.message
                  });
                } else {
                  if (response === void 0) {
                    throw new Error("Should not come here");
                  }
                  if (response.status === "ERROR") {
                    props.dispatch({ type: "setError", error: "SOMETHING_WENT_WRONG_ERROR" });
                  }
                }
                return [3, 6];
              case 5:
                _a.sent();
                props.dispatch({ type: "setError", error: "SOMETHING_WENT_WRONG_ERROR" });
                return [3, 6];
              case 6:
                return [
                  2
                  /*return*/
                ];
            }
          });
        });
      };
      return jsxRuntime.jsx(React.Fragment, {
        children: props.providers.map(function(provider) {
          return jsxRuntime.jsx(
            "div",
            genericComponentOverrideContext.__assign(
              { "data-supertokens": "providerContainer" },
              {
                children: jsxRuntime.jsx(
                  "span",
                  genericComponentOverrideContext.__assign(
                    {
                      onClick: function() {
                        return signInClick(provider.id);
                      }
                    },
                    { children: provider.getButton() }
                  )
                )
              }
            ),
            "provider-".concat(provider.id)
          );
        })
      });
    };
    var ProvidersForm = uiEntry.withOverride("ThirdPartySignInAndUpProvidersForm", ThirdPartySignInAndUpProvidersForm);
    var SignInAndUpHeader = uiEntry.withOverride("ThirdPartySignInAndUpHeader", function ThirdPartySignInAndUpHeader() {
      var t = translationContext.useTranslation();
      return jsxRuntime.jsx(
        "div",
        genericComponentOverrideContext.__assign(
          { "data-supertokens": "headerTitle" },
          { children: t("THIRD_PARTY_SIGN_IN_AND_UP_HEADER_TITLE") }
        )
      );
    });
    var SignUpFooter = uiEntry.withOverride("ThirdPartySignUpFooter", function ThirdPartySignUpFooter(_a) {
      var termsOfServiceLink = _a.termsOfServiceLink, privacyPolicyLink = _a.privacyPolicyLink;
      var t = translationContext.useTranslation();
      if (termsOfServiceLink === void 0 && privacyPolicyLink === void 0) {
        return null;
      }
      return jsxRuntime.jsxs(
        "div",
        genericComponentOverrideContext.__assign(
          { "data-supertokens": "secondaryText privacyPolicyAndTermsAndConditions" },
          {
            children: [
              t("THIRD_PARTY_SIGN_IN_UP_FOOTER_START"),
              termsOfServiceLink !== void 0 && jsxRuntime.jsx(
                "a",
                genericComponentOverrideContext.__assign(
                  {
                    "data-supertokens": "link",
                    href: termsOfServiceLink,
                    target: "_blank",
                    rel: "noopener noreferer"
                  },
                  { children: t("THIRD_PARTY_SIGN_IN_UP_FOOTER_TOS") }
                )
              ),
              termsOfServiceLink !== void 0 && privacyPolicyLink !== void 0 && t("THIRD_PARTY_SIGN_IN_UP_FOOTER_AND"),
              privacyPolicyLink !== void 0 && jsxRuntime.jsx(
                "a",
                genericComponentOverrideContext.__assign(
                  {
                    "data-supertokens": "link",
                    href: privacyPolicyLink,
                    target: "_blank",
                    rel: "noopener noreferer"
                  },
                  { children: t("THIRD_PARTY_SIGN_IN_UP_FOOTER_PP") }
                )
              ),
              t("THIRD_PARTY_SIGN_IN_UP_FOOTER_END")
            ]
          }
        )
      );
    });
    var SignInAndUpTheme = function(props) {
      return jsxRuntime.jsxs(
        "div",
        genericComponentOverrideContext.__assign(
          { "data-supertokens": "container" },
          {
            children: [
              jsxRuntime.jsxs(
                "div",
                genericComponentOverrideContext.__assign(
                  { "data-supertokens": "row" },
                  {
                    children: [
                      jsxRuntime.jsx(SignInAndUpHeader, {}),
                      jsxRuntime.jsx("div", { "data-supertokens": "divider" }),
                      props.featureState.error && jsxRuntime.jsx(generalError.GeneralError, { error: props.featureState.error }),
                      jsxRuntime.jsx(ProvidersForm, genericComponentOverrideContext.__assign({}, props)),
                      jsxRuntime.jsx(SignUpFooter, {
                        privacyPolicyLink: props.config.signInAndUpFeature.privacyPolicyLink,
                        termsOfServiceLink: props.config.signInAndUpFeature.termsOfServiceLink
                      })
                    ]
                  }
                )
              ),
              jsxRuntime.jsx(SuperTokensBranding.SuperTokensBranding, {})
            ]
          }
        )
      );
    };
    var SignInAndUpThemeWrapper = function(props) {
      var hasFont = translations.hasFontDefined(props.config.rootStyle);
      return jsxRuntime.jsx(
        uiEntry.UserContextWrapper,
        genericComponentOverrideContext.__assign(
          { userContext: props.userContext },
          {
            children: jsxRuntime.jsx(
              ThemeBase,
              genericComponentOverrideContext.__assign(
                {
                  loadDefaultFont: !hasFont,
                  userStyles: [props.config.rootStyle, props.config.signInAndUpFeature.style]
                },
                {
                  children: jsxRuntime.jsx(
                    SignInAndUpTheme,
                    genericComponentOverrideContext.__assign({}, props)
                  )
                }
              )
            )
          }
        )
      );
    };
    var defaultTranslationsThirdParty = {
      en: genericComponentOverrideContext.__assign(
        genericComponentOverrideContext.__assign({}, translations.defaultTranslationsCommon.en),
        {
          THIRD_PARTY_SIGN_IN_AND_UP_HEADER_TITLE: "Sign Up / Sign In",
          THIRD_PARTY_SIGN_IN_UP_FOOTER_START: "By continuing, you agree to our ",
          THIRD_PARTY_SIGN_IN_UP_FOOTER_TOS: "Terms of Service",
          THIRD_PARTY_SIGN_IN_UP_FOOTER_AND: " and ",
          THIRD_PARTY_SIGN_IN_UP_FOOTER_PP: "Privacy Policy",
          THIRD_PARTY_SIGN_IN_UP_FOOTER_END: "",
          THIRD_PARTY_PROVIDER_DEFAULT_BTN_START: "Continue with ",
          THIRD_PARTY_PROVIDER_DEFAULT_BTN_END: "",
          THIRD_PARTY_ERROR_NO_EMAIL: "Could not retrieve email. Please try a different method.",
          /*
           * The following are error messages from our backend SDK.
           * These are returned as full messages to preserver compatibilty, but they work just like the keys above.
           * They are shown as is by default (setting the value to undefined will display the raw translation key)
           */
          "Cannot sign in / up due to security reasons. Please try a different login method or contact support. (ERR_CODE_004)": void 0,
          "Cannot sign in / up because new email cannot be applied to existing account. Please contact support. (ERR_CODE_005)": void 0,
          "Cannot sign in / up due to security reasons. Please try a different login method or contact support. (ERR_CODE_006)": void 0
        }
      )
    };
    var useFeatureReducer = function() {
      return React__namespace.useReducer(
        function(oldState, action) {
          switch (action.type) {
            case "setError":
              return genericComponentOverrideContext.__assign(
                genericComponentOverrideContext.__assign({}, oldState),
                { error: action.error }
              );
            default:
              return oldState;
          }
        },
        {},
        function() {
          var error = void 0;
          var errorQueryParam = genericComponentOverrideContext.getQueryParams("error");
          if (errorQueryParam !== null) {
            if (errorQueryParam === "signin") {
              error = "SOMETHING_WENT_WRONG_ERROR";
            } else if (errorQueryParam === "no_email_present") {
              error = "THIRD_PARTY_ERROR_NO_EMAIL";
            } else {
              var customError = genericComponentOverrideContext.getQueryParams("message");
              if (customError === null) {
                error = "SOMETHING_WENT_WRONG_ERROR";
              } else {
                error = customError;
              }
            }
          }
          return {
            error
          };
        }
      );
    };
    function useChildProps(recipe$12) {
      var recipeImplementation = React.useMemo(
        function() {
          return recipe$12 && getModifiedRecipeImplementation(recipe$12.webJSRecipe);
        },
        [recipe$12]
      );
      var dynamicLoginMethods = uiEntry.useDynamicLoginMethods();
      return React.useMemo(
        function() {
          if (!recipe$12 || !recipeImplementation) {
            return void 0;
          }
          var tenantProviders;
          if (genericComponentOverrideContext.SuperTokens.usesDynamicLoginMethods) {
            if (dynamicLoginMethods.loaded === false) {
              throw new Error("Component requiring dynamicLoginMethods rendered without FeatureWrapper.");
            } else {
              tenantProviders = dynamicLoginMethods.loginMethods.thirdparty.enabled ? dynamicLoginMethods.loginMethods.thirdparty.providers : [];
            }
          }
          return {
            providers: recipe.mergeProviders({
              tenantProviders,
              clientProviders: recipe$12.config.signInAndUpFeature.providers
            }),
            recipeImplementation,
            config: recipe$12.config,
            recipe: recipe$12
          };
        },
        [recipe$12, recipeImplementation]
      );
    }
    var SignInAndUpFeature = function(props) {
      var _a = useFeatureReducer(), state = _a[0], dispatch = _a[1];
      var childProps = useChildProps(props.recipe);
      var themeProps = genericComponentOverrideContext.__assign(
        genericComponentOverrideContext.__assign({}, childProps),
        { providers: childProps.providers }
      );
      return jsxRuntime.jsxs(React.Fragment, {
        children: [
          props.children === void 0 && jsxRuntime.jsx(
            SignInAndUpThemeWrapper,
            genericComponentOverrideContext.__assign({}, themeProps, {
              featureState: state,
              dispatch
            })
          ),
          props.children && React__namespace.Children.map(props.children, function(child) {
            if (React__namespace.isValidElement(child)) {
              return React__namespace.cloneElement(
                child,
                genericComponentOverrideContext.__assign(
                  genericComponentOverrideContext.__assign({}, childProps),
                  { featureState: state, dispatch }
                )
              );
            }
            return child;
          })
        ]
      });
    };
    var SignInAndUpFeatureWrapper = function(props) {
      var recipeComponentOverrides = props.useComponentOverrides();
      return jsxRuntime.jsx(
        uiEntry.ComponentOverrideContext.Provider,
        genericComponentOverrideContext.__assign(
          { value: recipeComponentOverrides },
          {
            children: jsxRuntime.jsx(
              uiEntry.FeatureWrapper,
              genericComponentOverrideContext.__assign(
                { useShadowDom: props.recipe.config.useShadowDom, defaultStore: defaultTranslationsThirdParty },
                {
                  children: jsxRuntime.jsx(
                    SignInAndUpFeature,
                    genericComponentOverrideContext.__assign({}, props)
                  )
                }
              )
            )
          }
        )
      );
    };
    var getModifiedRecipeImplementation = function(origImpl) {
      return genericComponentOverrideContext.__assign({}, origImpl);
    };
    var ThirdPartySignInAndUpCallbackTheme = (
      /** @class */
      function(_super) {
        genericComponentOverrideContext.__extends(ThirdPartySignInAndUpCallbackTheme2, _super);
        function ThirdPartySignInAndUpCallbackTheme2() {
          var _this = _super !== null && _super.apply(this, arguments) || this;
          _this.render = function() {
            return jsxRuntime.jsx(
              "div",
              genericComponentOverrideContext.__assign(
                { "data-supertokens": "container" },
                {
                  children: jsxRuntime.jsx(
                    "div",
                    genericComponentOverrideContext.__assign(
                      { "data-supertokens": "row" },
                      {
                        children: jsxRuntime.jsx(
                          "div",
                          genericComponentOverrideContext.__assign(
                            { "data-supertokens": "spinner" },
                            { children: jsxRuntime.jsx(uiEntry.SpinnerIcon, {}) }
                          )
                        )
                      }
                    )
                  )
                }
              )
            );
          };
          return _this;
        }
        return ThirdPartySignInAndUpCallbackTheme2;
      }(React.PureComponent)
    );
    var SignInAndUpCallbackThemeWithOverride = uiEntry.withOverride(
      "ThirdPartySignInAndUpCallbackTheme",
      ThirdPartySignInAndUpCallbackTheme
    );
    var SignInAndUpCallbackTheme = function(props) {
      var hasFont = translations.hasFontDefined(props.config.rootStyle);
      return jsxRuntime.jsx(
        ThemeBase,
        genericComponentOverrideContext.__assign(
          { loadDefaultFont: !hasFont, userStyles: [props.config.rootStyle, props.config.signInAndUpFeature.style] },
          { children: jsxRuntime.jsx(SignInAndUpCallbackThemeWithOverride, {}) }
        )
      );
    };
    var SignInAndUpCallback$1 = function(props) {
      var userContext = uiEntry.useUserContext();
      var verifyCode = React.useCallback(
        function() {
          return props.recipe.webJSRecipe.signInAndUp({
            userContext
          });
        },
        [props.recipe, props.history, userContext]
      );
      var handleVerifyResponse = React.useCallback(
        function(response) {
          return genericComponentOverrideContext.__awaiter(void 0, void 0, void 0, function() {
            var stateResponse, redirectToPath;
            return genericComponentOverrideContext.__generator(this, function(_a) {
              if (response.status === "NO_EMAIL_GIVEN_BY_PROVIDER") {
                return [
                  2,
                  genericComponentOverrideContext.SuperTokens.getInstanceOrThrow().redirectToAuth({
                    history: props.history,
                    queryParams: {
                      error: "no_email_present"
                    },
                    redirectBack: false
                  })
                ];
              }
              if (response.status === "SIGN_IN_UP_NOT_ALLOWED") {
                return [
                  2,
                  genericComponentOverrideContext.SuperTokens.getInstanceOrThrow().redirectToAuth({
                    history: props.history,
                    queryParams: {
                      error: response.status,
                      message: response.reason
                    },
                    redirectBack: false
                  })
                ];
              }
              if (response.status === "OK") {
                stateResponse = props.recipe.webJSRecipe.getStateAndOtherInfoFromStorage({
                  userContext
                });
                redirectToPath = stateResponse === void 0 ? void 0 : stateResponse.redirectToPath;
                return [
                  2,
                  recipe$1.Session.getInstanceOrThrow().validateGlobalClaimsAndHandleSuccessRedirection(
                    {
                      rid: props.recipe.config.recipeId,
                      successRedirectContext: {
                        action: "SUCCESS",
                        isNewRecipeUser: response.createdNewRecipeUser,
                        user: response.user,
                        redirectToPath
                      }
                    },
                    userContext,
                    props.history
                  )
                ];
              }
              return [
                2
                /*return*/
              ];
            });
          });
        },
        [props.recipe, props.history, userContext]
      );
      var handleError = React.useCallback(
        function(err) {
          if (STGeneralError__default.default.isThisError(err)) {
            return genericComponentOverrideContext.SuperTokens.getInstanceOrThrow().redirectToAuth({
              history: props.history,
              queryParams: {
                error: "custom",
                message: err.message
              },
              redirectBack: false
            });
          }
          return genericComponentOverrideContext.SuperTokens.getInstanceOrThrow().redirectToAuth({
            history: props.history,
            queryParams: {
              error: "signin"
            },
            redirectBack: false
          });
        },
        [props.recipe, props.history]
      );
      genericComponentOverrideContext.useOnMountAPICall(verifyCode, handleVerifyResponse, handleError);
      var recipeComponentOverrides = props.useComponentOverrides();
      return jsxRuntime.jsx(
        uiEntry.ComponentOverrideContext.Provider,
        genericComponentOverrideContext.__assign(
          { value: recipeComponentOverrides },
          {
            children: jsxRuntime.jsx(
              uiEntry.FeatureWrapper,
              genericComponentOverrideContext.__assign(
                { useShadowDom: props.recipe.config.useShadowDom, defaultStore: defaultTranslationsThirdParty },
                {
                  children: jsxRuntime.jsxs(React.Fragment, {
                    children: [
                      props.children === void 0 && jsxRuntime.jsx(SignInAndUpCallbackTheme, { config: props.recipe.config }),
                      props.children
                    ]
                  })
                }
              )
            )
          }
        )
      );
    };
    var ThirdPartyPreBuiltUI = (
      /** @class */
      function(_super) {
        genericComponentOverrideContext.__extends(ThirdPartyPreBuiltUI2, _super);
        function ThirdPartyPreBuiltUI2(recipeInstance) {
          var _this = _super.call(this) || this;
          _this.recipeInstance = recipeInstance;
          _this.getFeatures = function(useComponentOverrides) {
            if (useComponentOverrides === void 0) {
              useComponentOverrides = recipe.useContext;
            }
            var features = {};
            if (_this.recipeInstance.config.signInAndUpFeature.disableDefaultUI !== true) {
              var normalisedFullPath_1 = _this.recipeInstance.config.appInfo.websiteBasePath.appendPath(
                new NormalisedURLPath__default.default("/")
              );
              features[normalisedFullPath_1.getAsStringDangerous()] = {
                matches: genericComponentOverrideContext.matchRecipeIdUsingQueryParams(
                  _this.recipeInstance.config.recipeId
                ),
                component: function(prop) {
                  return _this.getFeatureComponent("signinup", prop, useComponentOverrides);
                },
                recipeID: recipe.ThirdParty.RECIPE_ID
              };
            }
            var normalisedFullPath = _this.recipeInstance.config.appInfo.websiteBasePath.appendPath(
              new NormalisedURLPath__default.default("/callback/:id")
            );
            features[normalisedFullPath.getAsStringDangerous()] = {
              matches: function() {
                return recipe.matchRecipeIdUsingState(_this.recipeInstance, {});
              },
              component: function(prop) {
                return _this.getFeatureComponent("signinupcallback", prop, useComponentOverrides);
              },
              recipeID: recipe.ThirdParty.RECIPE_ID
            };
            return features;
          };
          _this.getFeatureComponent = function(componentName, props, useComponentOverrides) {
            if (useComponentOverrides === void 0) {
              useComponentOverrides = recipe.useContext;
            }
            if (componentName === "signinup") {
              if (props.redirectOnSessionExists !== false) {
                return jsxRuntime.jsx(
                  uiEntry.UserContextWrapper,
                  genericComponentOverrideContext.__assign(
                    { userContext: props.userContext },
                    {
                      children: jsxRuntime.jsx(
                        SuperTokensBranding.AuthWidgetWrapper,
                        genericComponentOverrideContext.__assign(
                          { authRecipe: _this.recipeInstance, history: props.history },
                          {
                            children: jsxRuntime.jsx(
                              SignInAndUpFeatureWrapper,
                              genericComponentOverrideContext.__assign(
                                { recipe: _this.recipeInstance },
                                props,
                                { useComponentOverrides }
                              )
                            )
                          }
                        )
                      )
                    }
                  )
                );
              } else {
                return jsxRuntime.jsx(
                  uiEntry.UserContextWrapper,
                  genericComponentOverrideContext.__assign(
                    { userContext: props.userContext },
                    {
                      children: jsxRuntime.jsx(
                        SignInAndUpFeatureWrapper,
                        genericComponentOverrideContext.__assign({ recipe: _this.recipeInstance }, props, {
                          useComponentOverrides
                        })
                      )
                    }
                  )
                );
              }
            } else if (componentName === "signinupcallback") {
              return jsxRuntime.jsx(
                uiEntry.UserContextWrapper,
                genericComponentOverrideContext.__assign(
                  { userContext: props.userContext },
                  {
                    children: jsxRuntime.jsx(
                      SignInAndUpCallback$1,
                      genericComponentOverrideContext.__assign({ recipe: _this.recipeInstance }, props, {
                        useComponentOverrides
                      })
                    )
                  }
                )
              );
            } else {
              throw new Error("Should never come here");
            }
          };
          return _this;
        }
        ThirdPartyPreBuiltUI2.getInstanceOrInitAndGetInstance = function() {
          if (ThirdPartyPreBuiltUI2.instance === void 0) {
            var recipeInstace = recipe.ThirdParty.getInstanceOrThrow();
            ThirdPartyPreBuiltUI2.instance = new ThirdPartyPreBuiltUI2(recipeInstace);
          }
          return ThirdPartyPreBuiltUI2.instance;
        };
        ThirdPartyPreBuiltUI2.getFeatures = function(useComponentOverrides) {
          if (useComponentOverrides === void 0) {
            useComponentOverrides = recipe.useContext;
          }
          return ThirdPartyPreBuiltUI2.getInstanceOrInitAndGetInstance().getFeatures(useComponentOverrides);
        };
        ThirdPartyPreBuiltUI2.getFeatureComponent = function(componentName, props, useComponentOverrides) {
          if (useComponentOverrides === void 0) {
            useComponentOverrides = recipe.useContext;
          }
          return ThirdPartyPreBuiltUI2.getInstanceOrInitAndGetInstance().getFeatureComponent(
            componentName,
            props,
            useComponentOverrides
          );
        };
        ThirdPartyPreBuiltUI2.reset = function() {
          if (!genericComponentOverrideContext.isTest()) {
            return;
          }
          ThirdPartyPreBuiltUI2.instance = void 0;
          return;
        };
        ThirdPartyPreBuiltUI2.SignInAndUp = function(prop) {
          if (prop === void 0) {
            prop = {};
          }
          return ThirdPartyPreBuiltUI2.getInstanceOrInitAndGetInstance().getFeatureComponent("signinup", prop);
        };
        ThirdPartyPreBuiltUI2.SignInAndUpCallback = function(prop) {
          return ThirdPartyPreBuiltUI2.getInstanceOrInitAndGetInstance().getFeatureComponent("signinupcallback", prop);
        };
        ThirdPartyPreBuiltUI2.SignInAndUpTheme = SignInAndUpThemeWrapper;
        ThirdPartyPreBuiltUI2.SignInAndUpCallbackTheme = SignInAndUpCallbackTheme;
        return ThirdPartyPreBuiltUI2;
      }(uiEntry.RecipeRouter)
    );
    var SignInAndUp = ThirdPartyPreBuiltUI.SignInAndUp;
    var SignInAndUpCallback = ThirdPartyPreBuiltUI.SignInAndUpCallback;
    exports.ProvidersForm = ProvidersForm;
    exports.SignInAndUp = SignInAndUp;
    exports.SignInAndUpCallback = SignInAndUpCallback;
    exports.SignInAndUpCallbackTheme = SignInAndUpCallbackTheme;
    exports.SignInAndUpThemeWrapper = SignInAndUpThemeWrapper;
    exports.ThirdPartyPreBuiltUI = ThirdPartyPreBuiltUI;
    exports.defaultTranslationsThirdParty = defaultTranslationsThirdParty;
    exports.useChildProps = useChildProps;
    exports.useFeatureReducer = useFeatureReducer;
  }
});

// node_modules/supertokens-auth-react/lib/build/thirdpartyemailpasswordprebuiltui.js
var require_thirdpartyemailpasswordprebuiltui = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/thirdpartyemailpasswordprebuiltui.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var jsxRuntime = require_jsx_runtime();
    var NormalisedURLPath = require_normalisedURLPath2();
    var uiEntry = require_index2();
    var SuperTokensBranding = require_SuperTokensBranding();
    var emailpasswordprebuiltui = require_emailpassword_shared6();
    var thirdpartyprebuiltui = require_thirdparty_shared2();
    var recipe = require_thirdpartyemailpassword_shared();
    var React = require_react();
    var translations = require_translations();
    var translationContext = require_translationContext();
    var generalError = require_emailpassword_shared();
    require_supertokens_web_js();
    require_cookieHandler();
    require_postSuperTokensInitCallbacks();
    require_windowHandler();
    require_multitenancy();
    require_utils();
    require_normalisedURLDomain();
    require_react_dom();
    require_multitenancy_shared();
    require_session_shared2();
    require_session();
    require_recipeModule_shared();
    require_session_shared3();
    require_session_shared();
    require_emailpassword_shared3();
    require_emailverification_shared2();
    require_arrowLeftIcon();
    require_emailpassword_shared7();
    require_error2();
    require_emailpassword_shared5();
    require_emailpassword_shared2();
    require_error();
    require_emailpassword_shared4();
    require_emailpassword();
    require_authRecipe_shared();
    require_thirdparty_shared();
    require_thirdparty();
    require_normalisedURLPath();
    require_thirdpartyemailpassword();
    function _interopDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    function _interopNamespace(e) {
      if (e && e.__esModule)
        return e;
      var n = /* @__PURE__ */ Object.create(null);
      if (e) {
        Object.keys(e).forEach(function(k) {
          if (k !== "default") {
            var d = Object.getOwnPropertyDescriptor(e, k);
            Object.defineProperty(
              n,
              k,
              d.get ? d : {
                enumerable: true,
                get: function() {
                  return e[k];
                }
              }
            );
          }
        });
      }
      n.default = e;
      return Object.freeze(n);
    }
    var NormalisedURLPath__default = _interopDefault(NormalisedURLPath);
    var React__namespace = _interopNamespace(React);
    var styles = '/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * "License") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * "License") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n[data-supertokens~="container"] {\n    --palette-background: 255, 255, 255;\n    --palette-inputBackground: 250, 250, 250;\n    --palette-inputBorder: 224, 224, 224;\n    --palette-primary: 255, 155, 51;\n    --palette-primaryBorder: 238, 141, 35;\n    --palette-success: 65, 167, 0;\n    --palette-successBackground: 217, 255, 191;\n    --palette-error: 255, 23, 23;\n    --palette-errorBackground: 255, 241, 235;\n    --palette-textTitle: 34, 34, 34;\n    --palette-textLabel: 34, 34, 34;\n    --palette-textInput: 34, 34, 34;\n    --palette-textPrimary: 101, 101, 101;\n    --palette-textLink: 0, 118, 255;\n    --palette-buttonText: 255, 255, 255;\n    --palette-textGray: 128, 128, 128;\n    --palette-superTokensBrandingBackground: 242, 245, 246;\n    --palette-superTokensBrandingText: 173, 189, 196;\n\n    --font-size-0: 12px;\n    --font-size-1: 14px;\n    --font-size-2: 16px;\n    --font-size-3: 19px;\n    --font-size-4: 24px;\n}\n/*\n * Default styles.\n */\n@-webkit-keyframes slideTop {\n    0% {\n        -webkit-transform: translateY(-5px);\n                transform: translateY(-5px);\n    }\n    100% {\n        -webkit-transform: translateY(0px);\n                transform: translateY(0px);\n    }\n}\n@keyframes slideTop {\n    0% {\n        -webkit-transform: translateY(-5px);\n                transform: translateY(-5px);\n    }\n    100% {\n        -webkit-transform: translateY(0px);\n                transform: translateY(0px);\n    }\n}\n@-webkit-keyframes swing-in-top-fwd {\n    0% {\n        -webkit-transform: rotateX(-100deg);\n        transform: rotateX(-100deg);\n        -webkit-transform-origin: top;\n        transform-origin: top;\n        opacity: 0;\n    }\n    100% {\n        -webkit-transform: rotateX(0deg);\n        transform: rotateX(0deg);\n        -webkit-transform-origin: top;\n        transform-origin: top;\n        opacity: 1;\n    }\n}\n@keyframes swing-in-top-fwd {\n    0% {\n        -webkit-transform: rotateX(-100deg);\n        transform: rotateX(-100deg);\n        -webkit-transform-origin: top;\n        transform-origin: top;\n        opacity: 0;\n    }\n    100% {\n        -webkit-transform: rotateX(0deg);\n        transform: rotateX(0deg);\n        -webkit-transform-origin: top;\n        transform-origin: top;\n        opacity: 1;\n    }\n}\n[data-supertokens~="container"] {\n    font-family: "Rubik", sans-serif;\n    margin: 12px auto;\n    margin-top: 26px;\n    margin-bottom: 26px;\n    width: 420px;\n    text-align: center;\n    border-radius: 8px;\n    box-shadow: 1px 1px 10px rgba(0, 0, 0, 0.16);\n    background-color: rgb(var(--palette-background));\n}\n@media (max-width: 440px) {\n    [data-supertokens~="container"] {\n        width: 95vw;\n    }\n}\n[data-supertokens~="row"] {\n    margin: 0 auto;\n    width: 76%;\n    padding-top: 30px;\n    padding-bottom: 10px;\n}\n[data-supertokens~="superTokensBranding"] {\n    display: block;\n    margin: 0 auto;\n    background: rgb(var(--palette-superTokensBrandingBackground));\n    color: rgb(var(--palette-superTokensBrandingText));\n    text-decoration: none;\n    width: -webkit-fit-content;\n    width: -moz-fit-content;\n    width: fit-content;\n    border-radius: 6px 6px 0 0;\n    padding: 4px 9px;\n    font-weight: 300;\n    font-size: var(--font-size-0);\n    letter-spacing: 0.4px;\n}\n[data-supertokens~="generalError"] {\n    background: rgb(var(--palette-errorBackground));\n    padding-top: 10px;\n    padding-bottom: 10px;\n    margin-bottom: 15px;\n    padding-left: 18px;\n    padding-right: 18px;\n    letter-spacing: 0.2px;\n    font-size: var(--font-size-1);\n    border-radius: 8px;\n    color: rgb(var(--palette-error));\n    -webkit-animation: swing-in-top-fwd 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) both;\n            animation: swing-in-top-fwd 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) both;\n    word-wrap: break-word;\n}\n[data-supertokens~="headerTitle"] {\n    font-size: var(--font-size-4);\n    line-height: 40px;\n    letter-spacing: 0.58px;\n    font-weight: 800;\n    margin-bottom: 2px;\n    color: rgb(var(--palette-textTitle));\n}\n[data-supertokens~="headerSubtitle"] {\n    margin-bottom: 21px;\n}\n[data-supertokens~="privacyPolicyAndTermsAndConditions"] {\n    max-width: 300px;\n    margin-top: 10px;\n}\n[data-supertokens~="privacyPolicyAndTermsAndConditions"] a {\n    line-height: 21px;\n}\n/* TODO: split the link style into separate things*/\n/* We add this before primary and secondary text, because if they are applied to the same element the other ones take priority */\n[data-supertokens~="link"] {\n    padding-left: 3px;\n    padding-right: 3px;\n    color: rgb(var(--palette-textLink));\n    font-size: var(--font-size-1);\n    cursor: pointer;\n    letter-spacing: 0.16px;\n    line-height: 26px;\n}\n[data-supertokens~="primaryText"] {\n    font-size: var(--font-size-1);\n    font-weight: 500;\n    letter-spacing: 0.4px;\n    line-height: 21px;\n    color: rgb(var(--palette-textLabel));\n}\n[data-supertokens~="secondaryText"] {\n    font-size: var(--font-size-1);\n    font-weight: 300;\n    letter-spacing: 0.4px;\n    color: rgb(var(--palette-textPrimary));\n}\n[data-supertokens~="divider"] {\n    margin-top: 1em;\n    margin-bottom: 1em;\n    border-bottom: 0.3px solid #dddddd;\n    align-items: center;\n    padding-bottom: 5px;\n}\n[data-supertokens~="headerTinyTitle"] {\n    margin-top: 13px;\n    font-size: var(--font-size-3);\n    letter-spacing: 1.1px;\n    font-weight: 500;\n    line-height: 28px;\n}\n[data-supertokens~="secondaryLinkWithArrow"] {\n    margin-top: 10px;\n    margin-bottom: 30px;\n    cursor: pointer;\n}\n[data-supertokens~="secondaryLinkWithArrow"]:hover {\n    position: relative;\n    left: 2px;\n    word-spacing: 4px;\n}\n[data-supertokens~="generalSuccess"] {\n    color: rgb(var(--palette-success));\n    font-size: var(--font-size-1);\n    background: rgb(var(--palette-successBackground));\n    -webkit-animation: swing-in-top-fwd 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) both;\n            animation: swing-in-top-fwd 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) both;\n    padding: 9px 15px 9px 15px;\n    border-radius: 6px;\n    display: inline-block;\n}\n[data-supertokens~="spinner"] {\n    width: 80px;\n    height: auto;\n    padding-top: 20px;\n    padding-bottom: 40px;\n    margin: 0 auto;\n}\n[data-supertokens~="error"] {\n    color: rgb(var(--palette-error));\n}\n[data-supertokens~="linkButton"] {\n    background-color: transparent;\n    border: 0;\n}\n[data-supertokens~="secondaryLinkWithLeftArrow"] {\n    margin-top: 10px;\n    margin-bottom: 40px;\n    cursor: pointer;\n}\n[data-supertokens~="secondaryLinkWithLeftArrow"] svg {\n    margin-right: 0.3em;\n}\n[data-supertokens~="secondaryLinkWithLeftArrow"]:hover svg {\n    position: relative;\n    left: -4px;\n}\n[data-supertokens~="button"] {\n    background-color: rgb(var(--palette-primary));\n    color: rgb(var(--palette-buttonText));\n    width: 100%;\n    height: 34px;\n    font-weight: 700;\n    border-width: 1px;\n    border-style: solid;\n    border-radius: 6px;\n    border-color: rgb(var(--palette-primaryBorder));\n    background-position: center;\n    transition: all 0.4s;\n    background-size: 12000%;\n    cursor: pointer;\n}\n[data-supertokens~="button"]:disabled {\n    border: none;\n    cursor: no-drop;\n}\n[data-supertokens~="button"]:active {\n    outline: none;\n    transition: all 0s;\n    background-size: 100%;\n    -webkit-filter: brightness(0.85);\n            filter: brightness(0.85);\n}\n[data-supertokens~="button"]:focus {\n    outline: none;\n}\n[data-supertokens~="inputContainer"] {\n    margin-top: 6px;\n}\n[data-supertokens~="inputWrapper"] {\n    box-sizing: border-box;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    background-color: rgb(var(--palette-inputBackground));\n    height: 34px;\n    border-radius: 6px;\n    border: 1px solid rgb(var(--palette-inputBorder));\n}\n[data-supertokens~="inputWrapper"][focus-within] {\n    background-color: rgba(var(--palette-inputBackground), 0.25);\n    border: 1px solid rgb(var(--palette-primary));\n    box-shadow: 0 0 0 0.2rem rgba(var(--palette-primary), 0.25);\n    outline: none;\n}\n[data-supertokens~="inputWrapper"]:focus-within {\n    background-color: rgba(var(--palette-inputBackground), 0.25);\n    border: 1px solid rgb(var(--palette-primary));\n    box-shadow: 0 0 0 0.2rem rgba(var(--palette-primary), 0.25);\n    outline: none;\n}\n[data-supertokens~="inputError"] {\n    border: 1px solid rgb(var(--palette-error));\n    box-shadow: 0 0 0 0.2rem rgba(var(--palette-error), 0.25);\n    outline: none;\n}\n[data-supertokens~="inputError"][focus-within] {\n    border: 1px solid rgb(var(--palette-error));\n    box-shadow: 0 0 0 0.2rem rgba(var(--palette-error), 0.25);\n    outline: none;\n}\n[data-supertokens~="inputError"]:focus-within {\n    border: 1px solid rgb(var(--palette-error));\n    box-shadow: 0 0 0 0.2rem rgba(var(--palette-error), 0.25);\n    outline: none;\n}\n[data-supertokens~="input"] {\n    box-sizing: border-box;\n    padding-left: 15px;\n    -webkit-filter: none;\n            filter: none;\n    color: rgb(var(--palette-textInput));\n    background-color: transparent;\n    border-radius: 6px;\n    font-size: var(--font-size-1);\n    border: none;\n    padding-right: 25px;\n    letter-spacing: 1.2px;\n    flex: 9 1 75%;\n    width: 75%;\n    height: 32px;\n}\n[data-supertokens~="input"]:focus {\n    border: none;\n    outline: none;\n}\n[data-supertokens~="input"]:-webkit-autofill,\n[data-supertokens~="input"]:-webkit-autofill:hover,\n[data-supertokens~="input"]:-webkit-autofill:focus,\n[data-supertokens~="input"]:-webkit-autofill:active {\n    -webkit-text-fill-color: rgb(var(--palette-textInput));\n    box-shadow: 0 0 0 30px rgb(var(--palette-inputBackground)) inset;\n}\n[data-supertokens~="inputAdornment"] {\n    justify-content: center;\n    margin-right: 5px;\n}\n[data-supertokens~="showPassword"] {\n    cursor: pointer;\n}\n[data-supertokens~="forgotPasswordLink"] {\n    margin-top: 10px;\n}\n[data-supertokens~="enterEmailSuccessMessage"] {\n    margin-top: 15px;\n    margin-bottom: 15px;\n    word-break: break-word;\n}\n[data-supertokens~="submitNewPasswordSuccessMessage"] {\n    margin-top: 15px;\n    margin-bottom: 15px;\n}\n[data-supertokens~="inputErrorMessage"] {\n    padding-top: 5px;\n    padding-bottom: 5px;\n    color: rgb(var(--palette-error));\n    line-height: 24px;\n    font-weight: 400;\n    font-size: var(--font-size-1);\n    text-align: left;\n    -webkit-animation: slideTop 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;\n            animation: slideTop 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;\n    max-width: 330px;\n}\n@media (max-width: 440px) {\n    [data-supertokens~="inputErrorMessage"] {\n        max-width: 250px;\n    }\n}\n[data-supertokens~="inputErrorSymbol"] {\n    margin-right: 5px;\n    top: 1px;\n    position: relative;\n    left: 2px;\n}\n[data-supertokens~="label"] {\n    text-align: left;\n    font-weight: 600;\n    font-size: var(--font-size-1);\n    line-height: 24px;\n    color: rgb(var(--palette-textLabel));\n}\n[data-supertokens~="formRow"] {\n    display: flex;\n    flex-direction: column;\n    padding-top: 0px;\n    padding-bottom: 34px;\n}\n[data-supertokens~="formRow"][data-supertokens~="hasError"] {\n    padding-bottom: 0;\n}\n[data-supertokens~="sendVerifyEmailIcon"] {\n    margin-top: 11px;\n}\n[data-supertokens~="headerTinyTitle"] {\n    margin-top: 13px;\n    font-size: var(--font-size-3);\n    letter-spacing: 1.1px;\n    font-weight: 500;\n    line-height: 28px;\n}\n[data-supertokens~="sendVerifyEmailText"] {\n    line-height: 21px;\n    font-size: var(--font-size-1);\n    text-align: center;\n    font-weight: 300;\n    letter-spacing: 0.8px;\n}\n[data-supertokens~="secondaryLinkWithArrow"] {\n    margin-top: 10px;\n    margin-bottom: 30px;\n    cursor: pointer;\n}\n[data-supertokens~="secondaryLinkWithArrow"]:hover {\n    position: relative;\n    left: 2px;\n    word-spacing: 4px;\n}\n[data-supertokens~="sendVerifyEmailResend"] {\n    margin-top: 13px;\n    font-weight: 300;\n}\n[data-supertokens~="sendVerifyEmailResend"]:hover {\n    text-decoration: underline;\n}\n[data-supertokens~="noFormRow"] {\n    padding-bottom: 25px;\n}\n[data-supertokens~="emailVerificationButtonWrapper"] {\n    padding-top: 25px;\n    max-width: 96px;\n    margin: 0 auto;\n}\n[data-supertokens~="resetPasswordHeaderTitle"] {\n    position: relative;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n[data-supertokens~="backButtonCommon"] {\n    width: 16px;\n    height: 13px;\n}\n[data-supertokens~="backButton"] {\n    cursor: pointer;\n    border: none;\n    background-color: transparent;\n    padding: 0px;\n}\n[data-supertokens~="backButtonPlaceholder"] {\n    display: block;\n}\n[data-supertokens~="resendEmailLink"] {\n    display: inline-block;\n}\n[data-supertokens~="row"] {\n    padding-bottom: 30px;\n}\n[data-supertokens~="providerContainer"] {\n    padding-top: 9px;\n    padding-bottom: 9px;\n}\n[data-supertokens~="providerButton"] {\n    border-color: rgb(221, 221, 221) !important;\n}\n[data-supertokens~="providerButton"] {\n    min-height: 32px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    padding: 2px 8px;\n\n    background-color: white;\n    color: black;\n}\n[data-supertokens~="providerButton"]:hover {\n    -webkit-filter: none !important;\n            filter: none !important;\n}\n[data-supertokens~="providerButton"]:hover {\n    background-color: #fafafa;\n}\n[data-supertokens~="providerButtonLeft"] {\n    min-width: 34px;\n    margin-left: 66px;\n}\n[data-supertokens~="providerButtonLogo"] {\n    height: 30px;\n    display: flex;\n}\n[data-supertokens~="providerButtonLogoCenter"] {\n    display: flex;\n    margin: auto;\n}\n[data-supertokens~="providerButtonText"] {\n    font-weight: 400;\n    text-align: center;\n    justify-content: center;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    display: inline-block;\n}\n[data-supertokens~="providerButtonText"]:only-child {\n    margin: 0 auto;\n}\n[data-supertokens~="thirdPartyEmailPasswordDivider"] {\n    padding-top: 5px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    color: rgb(var(--palette-textPrimary));\n}\n[data-supertokens~="thirdPartyEmailPasswordDividerOr"] {\n    flex: 1 1;\n    margin-top: 0.75em;\n}\n[data-supertokens~="divider"] {\n    flex: 3 3;\n}\n[data-supertokens~="providerButton"] {\n    margin: auto !important;\n    max-width: 240px !important;\n}\n[data-supertokens~="providerButtonLeft"] {\n    margin-left: 30px !important;\n}\n';
    var ThemeBase = function(_a) {
      var children = _a.children, userStyles = _a.userStyles, loadDefaultFont = _a.loadDefaultFont;
      return jsxRuntime.jsxs(React.Fragment, {
        children: [
          children,
          loadDefaultFont && jsxRuntime.jsx("link", {
            href: "//fonts.googleapis.com/css?family=Rubik:wght@300;400;600;500;700",
            rel: "stylesheet",
            type: "text/css"
          }),
          jsxRuntime.jsxs("style", { children: [styles, userStyles.join("\n")] })
        ]
      });
    };
    var Header = uiEntry.withOverride("ThirdPartyEmailPasswordHeader", function ThirdPartyEmailPasswordHeader(_a) {
      var isSignUp = _a.isSignUp, setIsSignUp = _a.setIsSignUp;
      if (isSignUp === true) {
        return jsxRuntime.jsx(emailpasswordprebuiltui.SignUpHeader, {
          onClick: function() {
            return setIsSignUp(false);
          }
        });
      } else {
        return jsxRuntime.jsx(emailpasswordprebuiltui.SignInHeader, {
          onClick: function() {
            return setIsSignUp(true);
          }
        });
      }
    });
    var SignInAndUpTheme = function(props) {
      var _a;
      var t = translationContext.useTranslation();
      var usesDynamicLoginMethods = genericComponentOverrideContext.SuperTokens.usesDynamicLoginMethods;
      var dynamicLoginMethods = uiEntry.useDynamicLoginMethods();
      var loginMethods;
      if (usesDynamicLoginMethods) {
        if (dynamicLoginMethods.loaded === false) {
          throw new Error("Component requiring dynamicLoginMethods rendered without FeatureWrapper.");
        } else {
          loginMethods = dynamicLoginMethods.loginMethods;
        }
      }
      var hasProviders = ((_a = props.tpChildProps) === null || _a === void 0 ? void 0 : _a.providers) !== void 0 && props.tpChildProps.providers.length > 0;
      var thirdPartyEnabled = usesDynamicLoginMethods === false && hasProviders || (loginMethods === null || loginMethods === void 0 ? void 0 : loginMethods.thirdparty.enabled) && hasProviders;
      var emailPasswordEnabled = props.emailPasswordRecipe !== void 0 && usesDynamicLoginMethods === false || (loginMethods === null || loginMethods === void 0 ? void 0 : loginMethods.emailpassword.enabled);
      if (thirdPartyEnabled === false && emailPasswordEnabled === false) {
        return null;
      }
      return jsxRuntime.jsxs(
        "div",
        genericComponentOverrideContext.__assign(
          { "data-supertokens": "container" },
          {
            children: [
              jsxRuntime.jsxs(
                "div",
                genericComponentOverrideContext.__assign(
                  { "data-supertokens": "row" },
                  {
                    children: [
                      jsxRuntime.jsx(Header, {
                        isSignUp: props.epState.isSignUp,
                        setIsSignUp: function(isSignUp) {
                          return props.epDispatch({ type: isSignUp ? "setSignUp" : "setSignIn" });
                        }
                      }),
                      props.commonState.error && jsxRuntime.jsx(generalError.GeneralError, { error: props.commonState.error }),
                      props.tpChildProps !== void 0 && thirdPartyEnabled && jsxRuntime.jsx(
                        thirdpartyprebuiltui.ProvidersForm,
                        genericComponentOverrideContext.__assign({}, props.tpChildProps, {
                          featureState: props.tpState,
                          dispatch: props.tpDispatch
                        })
                      ),
                      emailPasswordEnabled && thirdPartyEnabled && jsxRuntime.jsxs(
                        "div",
                        genericComponentOverrideContext.__assign(
                          { "data-supertokens": "thirdPartyEmailPasswordDivider" },
                          {
                            children: [
                              jsxRuntime.jsx("div", { "data-supertokens": "divider" }),
                              jsxRuntime.jsx(
                                "div",
                                genericComponentOverrideContext.__assign(
                                  {
                                    "data-supertokens": "thirdPartyEmailPasswordDividerOr"
                                  },
                                  {
                                    children: t(
                                      "THIRD_PARTY_EMAIL_PASSWORD_SIGN_IN_AND_UP_DIVIDER_OR"
                                    )
                                  }
                                )
                              ),
                              jsxRuntime.jsx("div", { "data-supertokens": "divider" })
                            ]
                          }
                        )
                      ),
                      props.epChildProps !== void 0 && emailPasswordEnabled && (props.epState.isSignUp ? jsxRuntime.jsx(
                        emailpasswordprebuiltui.SignUpForm,
                        genericComponentOverrideContext.__assign(
                          {},
                          props.epChildProps.signUpForm,
                          {
                            footer: jsxRuntime.jsx(emailpasswordprebuiltui.SignUpFooter, {
                              privacyPolicyLink: props.epChildProps.config.signInAndUpFeature.signUpForm.privacyPolicyLink,
                              termsOfServiceLink: props.epChildProps.config.signInAndUpFeature.signUpForm.termsOfServiceLink
                            })
                          }
                        )
                      ) : jsxRuntime.jsx(
                        emailpasswordprebuiltui.SignInForm,
                        genericComponentOverrideContext.__assign(
                          {},
                          props.epChildProps.signInForm,
                          {
                            footer: jsxRuntime.jsx(emailpasswordprebuiltui.SignInFooter, {
                              onClick: props.epChildProps.signInForm.forgotPasswordClick
                            })
                          }
                        )
                      ))
                    ]
                  }
                )
              ),
              jsxRuntime.jsx(SuperTokensBranding.SuperTokensBranding, {})
            ]
          }
        )
      );
    };
    function SignInAndUpThemeWrapper(props) {
      var hasFont = translations.hasFontDefined(props.config.rootStyle);
      return jsxRuntime.jsx(
        uiEntry.UserContextWrapper,
        genericComponentOverrideContext.__assign(
          { userContext: props.userContext },
          {
            children: jsxRuntime.jsx(
              ThemeBase,
              genericComponentOverrideContext.__assign(
                {
                  loadDefaultFont: !hasFont,
                  userStyles: [props.config.rootStyle, props.config.signInAndUpFeature.style]
                },
                {
                  children: jsxRuntime.jsx(
                    SignInAndUpTheme,
                    genericComponentOverrideContext.__assign({}, props)
                  )
                }
              )
            )
          }
        )
      );
    }
    var defaultTranslationsThirdPartyEmailPassword = {
      en: genericComponentOverrideContext.__assign(
        genericComponentOverrideContext.__assign(
          genericComponentOverrideContext.__assign({}, thirdpartyprebuiltui.defaultTranslationsThirdParty.en),
          emailpasswordprebuiltui.defaultTranslationsEmailPassword.en
        ),
        { THIRD_PARTY_EMAIL_PASSWORD_SIGN_IN_AND_UP_DIVIDER_OR: "or" }
      )
    };
    var SignInAndUp$1 = function(props) {
      var _a = thirdpartyprebuiltui.useFeatureReducer(), tpState = _a[0], tpDispatch = _a[1];
      var _b = emailpasswordprebuiltui.useFeatureReducer(props.recipe.emailPasswordRecipe), epState = _b[0], epDispatch = _b[1];
      var _c = React__namespace.useReducer(
        function(state, action) {
          switch (action.type) {
            case "setSignIn":
              return genericComponentOverrideContext.__assign(
                genericComponentOverrideContext.__assign({}, state),
                { error: void 0 }
              );
            case "setSignUp":
              return genericComponentOverrideContext.__assign(
                genericComponentOverrideContext.__assign({}, state),
                { error: void 0 }
              );
            case "setError":
              return genericComponentOverrideContext.__assign(
                genericComponentOverrideContext.__assign({}, state),
                { error: action.error }
              );
            default:
              return state;
          }
        },
        { error: tpState.error || epState.error }
      ), combinedState = _c[0], dispatch = _c[1];
      var combinedTPDispatch = React__namespace.useCallback(
        function(action) {
          dispatch(action);
          tpDispatch(action);
        },
        [tpDispatch, dispatch]
      );
      var tpChildProps = thirdpartyprebuiltui.useChildProps(props.recipe.thirdPartyRecipe);
      var combinedEPDispatch = React__namespace.useCallback(
        function(action) {
          dispatch(action);
          epDispatch(action);
        },
        [epDispatch, dispatch]
      );
      var epChildProps = emailpasswordprebuiltui.useChildProps(
        props.recipe.emailPasswordRecipe,
        epState,
        combinedEPDispatch,
        props.history
      );
      var childProps = {
        emailPasswordRecipe: props.recipe.emailPasswordRecipe,
        thirdPartyRecipe: props.recipe.thirdPartyRecipe,
        config: props.recipe.config,
        history: props.history,
        commonState: combinedState,
        tpState,
        tpDispatch: combinedTPDispatch,
        tpChildProps,
        epState,
        epDispatch: combinedEPDispatch,
        epChildProps
      };
      return jsxRuntime.jsxs(React.Fragment, {
        children: [
          props.children === void 0 && jsxRuntime.jsx(SignInAndUpThemeWrapper, genericComponentOverrideContext.__assign({}, childProps)),
          props.children && React__namespace.Children.map(props.children, function(child) {
            if (React__namespace.isValidElement(child)) {
              return React__namespace.cloneElement(child, childProps);
            }
            return child;
          })
        ]
      });
    };
    var SignInAndUpFeatureWrapper = function(props) {
      var recipeComponentOverrides = props.useComponentOverrides();
      return jsxRuntime.jsx(
        uiEntry.ComponentOverrideContext.Provider,
        genericComponentOverrideContext.__assign(
          { value: recipeComponentOverrides },
          {
            children: jsxRuntime.jsx(
              uiEntry.FeatureWrapper,
              genericComponentOverrideContext.__assign(
                {
                  useShadowDom: props.recipe.config.useShadowDom,
                  defaultStore: defaultTranslationsThirdPartyEmailPassword
                },
                { children: jsxRuntime.jsx(SignInAndUp$1, genericComponentOverrideContext.__assign({}, props)) }
              )
            )
          }
        )
      );
    };
    var ThirdPartyEmailPasswordPreBuiltUI = (
      /** @class */
      function(_super) {
        genericComponentOverrideContext.__extends(ThirdPartyEmailPasswordPreBuiltUI2, _super);
        function ThirdPartyEmailPasswordPreBuiltUI2(recipeInstance) {
          var _this = _super.call(this) || this;
          _this.recipeInstance = recipeInstance;
          _this.getFeatures = function(useComponentOverrides) {
            if (useComponentOverrides === void 0) {
              useComponentOverrides = recipe.useContext;
            }
            var features = {};
            if (_this.emailPasswordPreBuiltUI !== void 0) {
              features = genericComponentOverrideContext.__assign(
                genericComponentOverrideContext.__assign({}, features),
                _this.emailPasswordPreBuiltUI.getFeatures(useComponentOverrides)
              );
            }
            if (_this.thirdPartyPreBuiltUI !== void 0) {
              features = genericComponentOverrideContext.__assign(
                genericComponentOverrideContext.__assign({}, features),
                _this.thirdPartyPreBuiltUI.getFeatures(useComponentOverrides)
              );
            }
            if (_this.recipeInstance.config.signInAndUpFeature.disableDefaultUI !== true) {
              var normalisedFullPath = _this.recipeInstance.config.appInfo.websiteBasePath.appendPath(
                new NormalisedURLPath__default.default("/")
              );
              features[normalisedFullPath.getAsStringDangerous()] = {
                matches: genericComponentOverrideContext.matchRecipeIdUsingQueryParams(
                  _this.recipeInstance.config.recipeId
                ),
                component: function(prop) {
                  return _this.getFeatureComponent("signinup", prop, useComponentOverrides);
                },
                recipeID: recipe.ThirdPartyEmailPassword.RECIPE_ID
              };
            }
            return features;
          };
          _this.getFeatureComponent = function(componentName, props, useComponentOverrides) {
            if (useComponentOverrides === void 0) {
              useComponentOverrides = recipe.useContext;
            }
            if (componentName === "signinup") {
              if (props.redirectOnSessionExists !== false) {
                return jsxRuntime.jsx(
                  uiEntry.UserContextWrapper,
                  genericComponentOverrideContext.__assign(
                    { userContext: props.userContext },
                    {
                      children: jsxRuntime.jsx(
                        SuperTokensBranding.AuthWidgetWrapper,
                        genericComponentOverrideContext.__assign(
                          { authRecipe: _this.recipeInstance, history: props.history },
                          {
                            children: jsxRuntime.jsx(
                              SignInAndUpFeatureWrapper,
                              genericComponentOverrideContext.__assign(
                                { recipe: _this.recipeInstance },
                                props,
                                { useComponentOverrides }
                              )
                            )
                          }
                        )
                      )
                    }
                  )
                );
              } else {
                return jsxRuntime.jsx(
                  uiEntry.UserContextWrapper,
                  genericComponentOverrideContext.__assign(
                    { userContext: props.userContext },
                    {
                      children: jsxRuntime.jsx(
                        SignInAndUpFeatureWrapper,
                        genericComponentOverrideContext.__assign({ recipe: _this.recipeInstance }, props, {
                          useComponentOverrides
                        })
                      )
                    }
                  )
                );
              }
            } else if (componentName === "resetpassword") {
              if (_this.emailPasswordPreBuiltUI === void 0) {
                throw new Error("Should not come here...");
              }
              return _this.emailPasswordPreBuiltUI.getFeatureComponent(componentName, props, useComponentOverrides);
            } else if (componentName === "signinupcallback") {
              if (_this.thirdPartyPreBuiltUI === void 0) {
                throw new Error(
                  "Embedding this component requires the thirdparty recipe to be enabled. Please check the value of signInAndUpFeature.providers in the configuration."
                );
              }
              return _this.thirdPartyPreBuiltUI.getFeatureComponent(componentName, props, useComponentOverrides);
            } else {
              throw new Error("Should not come here...");
            }
          };
          var thirdPartyRecipe = recipeInstance.thirdPartyRecipe, emailPasswordRecipe = recipeInstance.emailPasswordRecipe;
          if (thirdPartyRecipe !== void 0) {
            _this.thirdPartyPreBuiltUI = new thirdpartyprebuiltui.ThirdPartyPreBuiltUI(thirdPartyRecipe);
          }
          if (emailPasswordRecipe !== void 0) {
            _this.emailPasswordPreBuiltUI = new emailpasswordprebuiltui.EmailPasswordPreBuiltUI(emailPasswordRecipe);
          }
          return _this;
        }
        ThirdPartyEmailPasswordPreBuiltUI2.getInstanceOrInitAndGetInstance = function() {
          if (ThirdPartyEmailPasswordPreBuiltUI2.instance === void 0) {
            var recipeInstance = recipe.ThirdPartyEmailPassword.getInstanceOrThrow();
            ThirdPartyEmailPasswordPreBuiltUI2.instance = new ThirdPartyEmailPasswordPreBuiltUI2(recipeInstance);
          }
          return ThirdPartyEmailPasswordPreBuiltUI2.instance;
        };
        ThirdPartyEmailPasswordPreBuiltUI2.getFeatures = function(useComponentOverrides) {
          if (useComponentOverrides === void 0) {
            useComponentOverrides = recipe.useContext;
          }
          return ThirdPartyEmailPasswordPreBuiltUI2.getInstanceOrInitAndGetInstance().getFeatures(useComponentOverrides);
        };
        ThirdPartyEmailPasswordPreBuiltUI2.getFeatureComponent = function(componentName, props, useComponentOverrides) {
          if (useComponentOverrides === void 0) {
            useComponentOverrides = recipe.useContext;
          }
          return ThirdPartyEmailPasswordPreBuiltUI2.getInstanceOrInitAndGetInstance().getFeatureComponent(
            componentName,
            props,
            useComponentOverrides
          );
        };
        ThirdPartyEmailPasswordPreBuiltUI2.reset = function() {
          if (!genericComponentOverrideContext.isTest()) {
            return;
          }
          ThirdPartyEmailPasswordPreBuiltUI2.instance = void 0;
          return;
        };
        var _a;
        _a = ThirdPartyEmailPasswordPreBuiltUI2;
        ThirdPartyEmailPasswordPreBuiltUI2.ThirdPartySignInAndUpCallback = function(prop) {
          return _a.getFeatureComponent("signinupcallback", prop);
        };
        ThirdPartyEmailPasswordPreBuiltUI2.ResetPasswordUsingToken = function(prop) {
          return _a.getFeatureComponent("resetpassword", prop);
        };
        ThirdPartyEmailPasswordPreBuiltUI2.SignInAndUp = function(prop) {
          if (prop === void 0) {
            prop = {};
          }
          return _a.getFeatureComponent("signinup", prop);
        };
        ThirdPartyEmailPasswordPreBuiltUI2.ThirdPartySignInAndUpCallbackTheme = thirdpartyprebuiltui.SignInAndUpCallbackTheme;
        ThirdPartyEmailPasswordPreBuiltUI2.ResetPasswordUsingTokenTheme = emailpasswordprebuiltui.ResetPasswordUsingTokenThemeWrapper;
        ThirdPartyEmailPasswordPreBuiltUI2.SignInAndUpTheme = SignInAndUpThemeWrapper;
        return ThirdPartyEmailPasswordPreBuiltUI2;
      }(uiEntry.RecipeRouter)
    );
    var ThirdPartySignInAndUpCallback = ThirdPartyEmailPasswordPreBuiltUI.ThirdPartySignInAndUpCallback;
    var ResetPasswordUsingToken = ThirdPartyEmailPasswordPreBuiltUI.ResetPasswordUsingToken;
    var SignInAndUp = ThirdPartyEmailPasswordPreBuiltUI.SignInAndUp;
    exports.ResetPasswordUsingTokenTheme = emailpasswordprebuiltui.ResetPasswordUsingTokenThemeWrapper;
    exports.ThirdPartySignInAndUpCallbackTheme = thirdpartyprebuiltui.SignInAndUpCallbackTheme;
    exports.ResetPasswordUsingToken = ResetPasswordUsingToken;
    exports.SignInAndUp = SignInAndUp;
    exports.SignInAndUpTheme = SignInAndUpThemeWrapper;
    exports.ThirdPartyEmailPasswordPreBuiltUI = ThirdPartyEmailPasswordPreBuiltUI;
    exports.ThirdPartySignInAndUpCallback = ThirdPartySignInAndUpCallback;
  }
});

// node_modules/supertokens-auth-react/recipe/thirdpartyemailpassword/prebuiltui.js
var require_prebuiltui = __commonJS({
  "node_modules/supertokens-auth-react/recipe/thirdpartyemailpassword/prebuiltui.js"(exports) {
    function __export(m) {
      for (var p in m)
        if (!exports.hasOwnProperty(p))
          exports[p] = m[p];
    }
    exports.__esModule = true;
    __export(require_thirdpartyemailpasswordprebuiltui());
  }
});
export default require_prebuiltui();
//# sourceMappingURL=supertokens-auth-react_recipe_thirdpartyemailpassword_prebuiltui.js.map
